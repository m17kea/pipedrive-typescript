/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ResponseCallLogObjectAllOf
 */
export interface ResponseCallLogObjectAllOf {
    /**
     * The call log ID, generated when the call log was created
     * @type {string}
     * @memberof ResponseCallLogObjectAllOf
     */
    id?: string;
    /**
     * If the call log has an audio recording attached, the value should be true
     * @type {boolean}
     * @memberof ResponseCallLogObjectAllOf
     */
    has_recording?: boolean;
    /**
     * The company ID of the owner of the call log
     * @type {number}
     * @memberof ResponseCallLogObjectAllOf
     */
    company_id?: number;
}

/**
 * Check if a given object implements the ResponseCallLogObjectAllOf interface.
 */
export function instanceOfResponseCallLogObjectAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ResponseCallLogObjectAllOfFromJSON(json: any): ResponseCallLogObjectAllOf {
    return ResponseCallLogObjectAllOfFromJSONTyped(json, false);
}

export function ResponseCallLogObjectAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseCallLogObjectAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'has_recording': !exists(json, 'has_recording') ? undefined : json['has_recording'],
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
    };
}

export function ResponseCallLogObjectAllOfToJSON(value?: ResponseCallLogObjectAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'has_recording': value.has_recording,
        'company_id': value.company_id,
    };
}

