/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddProductRequest
 */
export interface AddProductRequest {
    /**
     * The name of the product
     * @type {string}
     * @memberof AddProductRequest
     */
    name: string;
    /**
     * The product code
     * @type {string}
     * @memberof AddProductRequest
     */
    code?: string;
    /**
     * The unit in which this product is sold
     * @type {string}
     * @memberof AddProductRequest
     */
    unit?: string;
    /**
     * The tax percentage
     * @type {number}
     * @memberof AddProductRequest
     */
    tax?: number;
    /**
     * Whether this product will be made active or not
     * @type {number}
     * @memberof AddProductRequest
     */
    active_flag?: AddProductRequestActiveFlagEnum;
    /**
     * Whether this product can be selected in deals or not
     * @type {number}
     * @memberof AddProductRequest
     */
    selectable?: AddProductRequestSelectableEnum;
    /**
     * 
     * @type {string}
     * @memberof AddProductRequest
     */
    visible_to?: AddProductRequestVisibleToEnum;
    /**
     * The ID of the user who will be marked as the owner of this product. When omitted, the authorized user ID will be used.
     * @type {number}
     * @memberof AddProductRequest
     */
    owner_id?: number;
    /**
     * An array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company's currency will be assigned.
     * @type {Array<object>}
     * @memberof AddProductRequest
     */
    prices?: Array<object>;
}

/**
* @export
* @enum {string}
*/
export enum AddProductRequestActiveFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum AddProductRequestSelectableEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum AddProductRequestVisibleToEnum {
    _1 = '1',
    _3 = '3',
    _5 = '5',
    _7 = '7'
}


/**
 * Check if a given object implements the AddProductRequest interface.
 */
export function instanceOfAddProductRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function AddProductRequestFromJSON(json: any): AddProductRequest {
    return AddProductRequestFromJSONTyped(json, false);
}

export function AddProductRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddProductRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
        'tax': !exists(json, 'tax') ? undefined : json['tax'],
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'selectable': !exists(json, 'selectable') ? undefined : json['selectable'],
        'visible_to': !exists(json, 'visible_to') ? undefined : json['visible_to'],
        'owner_id': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'prices': !exists(json, 'prices') ? undefined : json['prices'],
    };
}

export function AddProductRequestToJSON(value?: AddProductRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'code': value.code,
        'unit': value.unit,
        'tax': value.tax,
        'active_flag': value.active_flag,
        'selectable': value.selectable,
        'visible_to': value.visible_to,
        'owner_id': value.owner_id,
        'prices': value.prices,
    };
}

