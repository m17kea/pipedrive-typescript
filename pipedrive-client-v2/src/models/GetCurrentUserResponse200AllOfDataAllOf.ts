/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetCurrentUserResponse200AllOfDataAllOfLanguage } from './GetCurrentUserResponse200AllOfDataAllOfLanguage';
import {
    GetCurrentUserResponse200AllOfDataAllOfLanguageFromJSON,
    GetCurrentUserResponse200AllOfDataAllOfLanguageFromJSONTyped,
    GetCurrentUserResponse200AllOfDataAllOfLanguageToJSON,
} from './GetCurrentUserResponse200AllOfDataAllOfLanguage';

/**
 * 
 * @export
 * @interface GetCurrentUserResponse200AllOfDataAllOf
 */
export interface GetCurrentUserResponse200AllOfDataAllOf {
    /**
     * The user company ID
     * @type {number}
     * @memberof GetCurrentUserResponse200AllOfDataAllOf
     */
    company_id?: number;
    /**
     * The user company name
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfDataAllOf
     */
    company_name?: string;
    /**
     * The user company domain
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfDataAllOf
     */
    company_domain?: string;
    /**
     * The user company country
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfDataAllOf
     */
    company_country?: string;
    /**
     * The user company industry
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfDataAllOf
     */
    company_industry?: string;
    /**
     * 
     * @type {GetCurrentUserResponse200AllOfDataAllOfLanguage}
     * @memberof GetCurrentUserResponse200AllOfDataAllOf
     */
    language?: GetCurrentUserResponse200AllOfDataAllOfLanguage;
}

/**
 * Check if a given object implements the GetCurrentUserResponse200AllOfDataAllOf interface.
 */
export function instanceOfGetCurrentUserResponse200AllOfDataAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetCurrentUserResponse200AllOfDataAllOfFromJSON(json: any): GetCurrentUserResponse200AllOfDataAllOf {
    return GetCurrentUserResponse200AllOfDataAllOfFromJSONTyped(json, false);
}

export function GetCurrentUserResponse200AllOfDataAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCurrentUserResponse200AllOfDataAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
        'company_name': !exists(json, 'company_name') ? undefined : json['company_name'],
        'company_domain': !exists(json, 'company_domain') ? undefined : json['company_domain'],
        'company_country': !exists(json, 'company_country') ? undefined : json['company_country'],
        'company_industry': !exists(json, 'company_industry') ? undefined : json['company_industry'],
        'language': !exists(json, 'language') ? undefined : GetCurrentUserResponse200AllOfDataAllOfLanguageFromJSON(json['language']),
    };
}

export function GetCurrentUserResponse200AllOfDataAllOfToJSON(value?: GetCurrentUserResponse200AllOfDataAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'company_id': value.company_id,
        'company_name': value.company_name,
        'company_domain': value.company_domain,
        'company_country': value.company_country,
        'company_industry': value.company_industry,
        'language': GetCurrentUserResponse200AllOfDataAllOfLanguageToJSON(value.language),
    };
}

