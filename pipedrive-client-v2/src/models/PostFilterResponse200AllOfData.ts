/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostFilterResponse200AllOfData
 */
export interface PostFilterResponse200AllOfData {
    /**
     * The ID of the created filter
     * @type {number}
     * @memberof PostFilterResponse200AllOfData
     */
    id?: number;
    /**
     * The name of the created filter
     * @type {string}
     * @memberof PostFilterResponse200AllOfData
     */
    name?: string;
    /**
     * The activity flag of the created filter
     * @type {boolean}
     * @memberof PostFilterResponse200AllOfData
     */
    active_flag?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PostFilterResponse200AllOfData
     */
    type?: PostFilterResponse200AllOfDataTypeEnum;
    /**
     * If the created filter is temporary or not
     * @type {boolean}
     * @memberof PostFilterResponse200AllOfData
     */
    temporary_flag?: boolean;
    /**
     * The user ID of the created filter
     * @type {number}
     * @memberof PostFilterResponse200AllOfData
     */
    user_id?: number;
    /**
     * The add time of the created filter
     * @type {string}
     * @memberof PostFilterResponse200AllOfData
     */
    add_time?: string;
    /**
     * The update time of the created filter
     * @type {string}
     * @memberof PostFilterResponse200AllOfData
     */
    update_time?: string;
    /**
     * The visibility group ID of the created filter
     * @type {number}
     * @memberof PostFilterResponse200AllOfData
     */
    visible_to?: number;
    /**
     * The custom view ID of the created filter
     * @type {number}
     * @memberof PostFilterResponse200AllOfData
     */
    custom_view_id?: number;
    /**
     * The created filter conditions object
     * @type {object}
     * @memberof PostFilterResponse200AllOfData
     */
    conditions?: object;
}

/**
* @export
* @enum {string}
*/
export enum PostFilterResponse200AllOfDataTypeEnum {
    Deals = 'deals',
    Leads = 'leads',
    Org = 'org',
    People = 'people',
    Products = 'products',
    Activity = 'activity'
}


/**
 * Check if a given object implements the PostFilterResponse200AllOfData interface.
 */
export function instanceOfPostFilterResponse200AllOfData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostFilterResponse200AllOfDataFromJSON(json: any): PostFilterResponse200AllOfData {
    return PostFilterResponse200AllOfDataFromJSONTyped(json, false);
}

export function PostFilterResponse200AllOfDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostFilterResponse200AllOfData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'temporary_flag': !exists(json, 'temporary_flag') ? undefined : json['temporary_flag'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
        'add_time': !exists(json, 'add_time') ? undefined : json['add_time'],
        'update_time': !exists(json, 'update_time') ? undefined : json['update_time'],
        'visible_to': !exists(json, 'visible_to') ? undefined : json['visible_to'],
        'custom_view_id': !exists(json, 'custom_view_id') ? undefined : json['custom_view_id'],
        'conditions': !exists(json, 'conditions') ? undefined : json['conditions'],
    };
}

export function PostFilterResponse200AllOfDataToJSON(value?: PostFilterResponse200AllOfData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'active_flag': value.active_flag,
        'type': value.type,
        'temporary_flag': value.temporary_flag,
        'user_id': value.user_id,
        'add_time': value.add_time,
        'update_time': value.update_time,
        'visible_to': value.visible_to,
        'custom_view_id': value.custom_view_id,
        'conditions': value.conditions,
    };
}

