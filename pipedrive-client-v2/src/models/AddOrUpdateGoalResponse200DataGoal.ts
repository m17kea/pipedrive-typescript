/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddOrUpdateGoalResponse200DataGoalAssignee } from './AddOrUpdateGoalResponse200DataGoalAssignee';
import {
    AddOrUpdateGoalResponse200DataGoalAssigneeFromJSON,
    AddOrUpdateGoalResponse200DataGoalAssigneeFromJSONTyped,
    AddOrUpdateGoalResponse200DataGoalAssigneeToJSON,
} from './AddOrUpdateGoalResponse200DataGoalAssignee';
import type { AddOrUpdateGoalResponse200DataGoalDuration } from './AddOrUpdateGoalResponse200DataGoalDuration';
import {
    AddOrUpdateGoalResponse200DataGoalDurationFromJSON,
    AddOrUpdateGoalResponse200DataGoalDurationFromJSONTyped,
    AddOrUpdateGoalResponse200DataGoalDurationToJSON,
} from './AddOrUpdateGoalResponse200DataGoalDuration';
import type { AddOrUpdateGoalResponse200DataGoalExpectedOutcome } from './AddOrUpdateGoalResponse200DataGoalExpectedOutcome';
import {
    AddOrUpdateGoalResponse200DataGoalExpectedOutcomeFromJSON,
    AddOrUpdateGoalResponse200DataGoalExpectedOutcomeFromJSONTyped,
    AddOrUpdateGoalResponse200DataGoalExpectedOutcomeToJSON,
} from './AddOrUpdateGoalResponse200DataGoalExpectedOutcome';
import type { AddOrUpdateGoalResponse200DataGoalType } from './AddOrUpdateGoalResponse200DataGoalType';
import {
    AddOrUpdateGoalResponse200DataGoalTypeFromJSON,
    AddOrUpdateGoalResponse200DataGoalTypeFromJSONTyped,
    AddOrUpdateGoalResponse200DataGoalTypeToJSON,
} from './AddOrUpdateGoalResponse200DataGoalType';

/**
 * 
 * @export
 * @interface AddOrUpdateGoalResponse200DataGoal
 */
export interface AddOrUpdateGoalResponse200DataGoal {
    /**
     * The ID of the goal
     * @type {string}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    id?: string;
    /**
     * The ID of the creator of the goal
     * @type {number}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    owner_id?: number;
    /**
     * The title of the goal
     * @type {string}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    title?: string;
    /**
     * 
     * @type {AddOrUpdateGoalResponse200DataGoalType}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    type?: AddOrUpdateGoalResponse200DataGoalType;
    /**
     * 
     * @type {AddOrUpdateGoalResponse200DataGoalAssignee}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    assignee?: AddOrUpdateGoalResponse200DataGoalAssignee;
    /**
     * The interval of the goal
     * @type {string}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    interval?: string;
    /**
     * 
     * @type {AddOrUpdateGoalResponse200DataGoalDuration}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    duration?: AddOrUpdateGoalResponse200DataGoalDuration;
    /**
     * 
     * @type {AddOrUpdateGoalResponse200DataGoalExpectedOutcome}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    expected_outcome?: AddOrUpdateGoalResponse200DataGoalExpectedOutcome;
    /**
     * Whether the goal is currently active or not
     * @type {boolean}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    is_active?: boolean;
    /**
     * The IDs of the reports that belong to the goal
     * @type {Array<string>}
     * @memberof AddOrUpdateGoalResponse200DataGoal
     */
    report_ids?: Array<string>;
}

/**
 * Check if a given object implements the AddOrUpdateGoalResponse200DataGoal interface.
 */
export function instanceOfAddOrUpdateGoalResponse200DataGoal(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AddOrUpdateGoalResponse200DataGoalFromJSON(json: any): AddOrUpdateGoalResponse200DataGoal {
    return AddOrUpdateGoalResponse200DataGoalFromJSONTyped(json, false);
}

export function AddOrUpdateGoalResponse200DataGoalFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddOrUpdateGoalResponse200DataGoal {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'owner_id': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'type': !exists(json, 'type') ? undefined : AddOrUpdateGoalResponse200DataGoalTypeFromJSON(json['type']),
        'assignee': !exists(json, 'assignee') ? undefined : AddOrUpdateGoalResponse200DataGoalAssigneeFromJSON(json['assignee']),
        'interval': !exists(json, 'interval') ? undefined : json['interval'],
        'duration': !exists(json, 'duration') ? undefined : AddOrUpdateGoalResponse200DataGoalDurationFromJSON(json['duration']),
        'expected_outcome': !exists(json, 'expected_outcome') ? undefined : AddOrUpdateGoalResponse200DataGoalExpectedOutcomeFromJSON(json['expected_outcome']),
        'is_active': !exists(json, 'is_active') ? undefined : json['is_active'],
        'report_ids': !exists(json, 'report_ids') ? undefined : json['report_ids'],
    };
}

export function AddOrUpdateGoalResponse200DataGoalToJSON(value?: AddOrUpdateGoalResponse200DataGoal | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'owner_id': value.owner_id,
        'title': value.title,
        'type': AddOrUpdateGoalResponse200DataGoalTypeToJSON(value.type),
        'assignee': AddOrUpdateGoalResponse200DataGoalAssigneeToJSON(value.assignee),
        'interval': value.interval,
        'duration': AddOrUpdateGoalResponse200DataGoalDurationToJSON(value.duration),
        'expected_outcome': AddOrUpdateGoalResponse200DataGoalExpectedOutcomeToJSON(value.expected_outcome),
        'is_active': value.is_active,
        'report_ids': value.report_ids,
    };
}

