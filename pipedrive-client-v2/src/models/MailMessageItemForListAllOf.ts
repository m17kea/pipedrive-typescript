/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MailMessageItemForListAllOfFromInner } from './MailMessageItemForListAllOfFromInner';
import {
    MailMessageItemForListAllOfFromInnerFromJSON,
    MailMessageItemForListAllOfFromInnerFromJSONTyped,
    MailMessageItemForListAllOfFromInnerToJSON,
} from './MailMessageItemForListAllOfFromInner';

/**
 * 
 * @export
 * @interface MailMessageItemForListAllOf
 */
export interface MailMessageItemForListAllOf {
    /**
     * ID of the mail message.
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    id?: number;
    /**
     * The array of mail message sender (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForListAllOf
     */
    from?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The array of mail message receiver (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForListAllOf
     */
    to?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The array of mail message copies (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForListAllOf
     */
    cc?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The array of mail message blind copies (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForListAllOf
     */
    bcc?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The mail message body URL
     * @type {string}
     * @memberof MailMessageItemForListAllOf
     */
    body_url?: string;
    /**
     * The connection account ID
     * @type {string}
     * @memberof MailMessageItemForListAllOf
     */
    account_id?: string;
    /**
     * ID of the user whom mail message will be assigned to
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    user_id?: number;
    /**
     * ID of the mail message thread
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    mail_thread_id?: number;
    /**
     * The subject of mail message
     * @type {string}
     * @memberof MailMessageItemForListAllOf
     */
    subject?: string;
    /**
     * The snippet of mail message. Snippet length is up to 225 characters.
     * @type {string}
     * @memberof MailMessageItemForListAllOf
     */
    snippet?: string;
    /**
     * The status of tracking mail message. Value is `null` if tracking is not enabled.
     * @type {string}
     * @memberof MailMessageItemForListAllOf
     */
    mail_tracking_status?: MailMessageItemForListAllOfMailTrackingStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    mail_link_tracking_enabled_flag?: MailMessageItemForListAllOfMailLinkTrackingEnabledFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    read_flag?: MailMessageItemForListAllOfReadFlagEnum;
    /**
     * If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
     * @type {string}
     * @memberof MailMessageItemForListAllOf
     */
    draft?: string;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    draft_flag?: MailMessageItemForListAllOfDraftFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    synced_flag?: MailMessageItemForListAllOfSyncedFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    deleted_flag?: MailMessageItemForListAllOfDeletedFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    has_body_flag?: MailMessageItemForListAllOfHasBodyFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    sent_flag?: MailMessageItemForListAllOfSentFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    sent_from_pipedrive_flag?: MailMessageItemForListAllOfSentFromPipedriveFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    smart_bcc_flag?: MailMessageItemForListAllOfSmartBccFlagEnum;
    /**
     * Creation or receival time of the mail message
     * @type {Date}
     * @memberof MailMessageItemForListAllOf
     */
    message_time?: Date;
    /**
     * The insertion into the database time of the mail message
     * @type {Date}
     * @memberof MailMessageItemForListAllOf
     */
    add_time?: Date;
    /**
     * The updating time in the database of the mail message
     * @type {Date}
     * @memberof MailMessageItemForListAllOf
     */
    update_time?: Date;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    has_attachments_flag?: MailMessageItemForListAllOfHasAttachmentsFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    has_inline_attachments_flag?: MailMessageItemForListAllOfHasInlineAttachmentsFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForListAllOf
     */
    has_real_attachments_flag?: MailMessageItemForListAllOfHasRealAttachmentsFlagEnum;
}

/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfMailTrackingStatusEnum {
    Opened = 'opened',
    NotOpened = 'not opened'
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfMailLinkTrackingEnabledFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfReadFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfDraftFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfSyncedFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfDeletedFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfHasBodyFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfSentFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfSentFromPipedriveFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfSmartBccFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfHasAttachmentsFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfHasInlineAttachmentsFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListAllOfHasRealAttachmentsFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}


/**
 * Check if a given object implements the MailMessageItemForListAllOf interface.
 */
export function instanceOfMailMessageItemForListAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MailMessageItemForListAllOfFromJSON(json: any): MailMessageItemForListAllOf {
    return MailMessageItemForListAllOfFromJSONTyped(json, false);
}

export function MailMessageItemForListAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailMessageItemForListAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'from': !exists(json, 'from') ? undefined : ((json['from'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'to': !exists(json, 'to') ? undefined : ((json['to'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'cc': !exists(json, 'cc') ? undefined : ((json['cc'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'bcc': !exists(json, 'bcc') ? undefined : ((json['bcc'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'body_url': !exists(json, 'body_url') ? undefined : json['body_url'],
        'account_id': !exists(json, 'account_id') ? undefined : json['account_id'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
        'mail_thread_id': !exists(json, 'mail_thread_id') ? undefined : json['mail_thread_id'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'snippet': !exists(json, 'snippet') ? undefined : json['snippet'],
        'mail_tracking_status': !exists(json, 'mail_tracking_status') ? undefined : json['mail_tracking_status'],
        'mail_link_tracking_enabled_flag': !exists(json, 'mail_link_tracking_enabled_flag') ? undefined : json['mail_link_tracking_enabled_flag'],
        'read_flag': !exists(json, 'read_flag') ? undefined : json['read_flag'],
        'draft': !exists(json, 'draft') ? undefined : json['draft'],
        'draft_flag': !exists(json, 'draft_flag') ? undefined : json['draft_flag'],
        'synced_flag': !exists(json, 'synced_flag') ? undefined : json['synced_flag'],
        'deleted_flag': !exists(json, 'deleted_flag') ? undefined : json['deleted_flag'],
        'has_body_flag': !exists(json, 'has_body_flag') ? undefined : json['has_body_flag'],
        'sent_flag': !exists(json, 'sent_flag') ? undefined : json['sent_flag'],
        'sent_from_pipedrive_flag': !exists(json, 'sent_from_pipedrive_flag') ? undefined : json['sent_from_pipedrive_flag'],
        'smart_bcc_flag': !exists(json, 'smart_bcc_flag') ? undefined : json['smart_bcc_flag'],
        'message_time': !exists(json, 'message_time') ? undefined : (new Date(json['message_time'])),
        'add_time': !exists(json, 'add_time') ? undefined : (new Date(json['add_time'])),
        'update_time': !exists(json, 'update_time') ? undefined : (new Date(json['update_time'])),
        'has_attachments_flag': !exists(json, 'has_attachments_flag') ? undefined : json['has_attachments_flag'],
        'has_inline_attachments_flag': !exists(json, 'has_inline_attachments_flag') ? undefined : json['has_inline_attachments_flag'],
        'has_real_attachments_flag': !exists(json, 'has_real_attachments_flag') ? undefined : json['has_real_attachments_flag'],
    };
}

export function MailMessageItemForListAllOfToJSON(value?: MailMessageItemForListAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'from': value.from === undefined ? undefined : ((value.from as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'to': value.to === undefined ? undefined : ((value.to as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'cc': value.cc === undefined ? undefined : ((value.cc as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'bcc': value.bcc === undefined ? undefined : ((value.bcc as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'body_url': value.body_url,
        'account_id': value.account_id,
        'user_id': value.user_id,
        'mail_thread_id': value.mail_thread_id,
        'subject': value.subject,
        'snippet': value.snippet,
        'mail_tracking_status': value.mail_tracking_status,
        'mail_link_tracking_enabled_flag': value.mail_link_tracking_enabled_flag,
        'read_flag': value.read_flag,
        'draft': value.draft,
        'draft_flag': value.draft_flag,
        'synced_flag': value.synced_flag,
        'deleted_flag': value.deleted_flag,
        'has_body_flag': value.has_body_flag,
        'sent_flag': value.sent_flag,
        'sent_from_pipedrive_flag': value.sent_from_pipedrive_flag,
        'smart_bcc_flag': value.smart_bcc_flag,
        'message_time': value.message_time === undefined ? undefined : (value.message_time.toISOString()),
        'add_time': value.add_time === undefined ? undefined : (value.add_time.toISOString()),
        'update_time': value.update_time === undefined ? undefined : (value.update_time.toISOString()),
        'has_attachments_flag': value.has_attachments_flag,
        'has_inline_attachments_flag': value.has_inline_attachments_flag,
        'has_real_attachments_flag': value.has_real_attachments_flag,
    };
}

