/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ActivityResponseObjectAllOf
 */
export interface ActivityResponseObjectAllOf {
    /**
     * The due date of the activity. Format: YYYY-MM-DD
     * @type {Date}
     * @memberof ActivityResponseObjectAllOf
     */
    due_date?: Date;
    /**
     * The due time of the activity in UTC. Format: HH:MM
     * @type {string}
     * @memberof ActivityResponseObjectAllOf
     */
    due_time?: string;
    /**
     * The duration of the activity. Format: HH:MM
     * @type {string}
     * @memberof ActivityResponseObjectAllOf
     */
    duration?: string;
    /**
     * The ID of the deal this activity is associated with
     * @type {number}
     * @memberof ActivityResponseObjectAllOf
     */
    deal_id?: number;
    /**
     * The ID of the lead this activity is associated with
     * @type {string}
     * @memberof ActivityResponseObjectAllOf
     */
    lead_id?: string;
    /**
     * The ID of the person this activity is associated with
     * @type {number}
     * @memberof ActivityResponseObjectAllOf
     */
    person_id?: number;
    /**
     * The ID of the organization this activity is associated with
     * @type {number}
     * @memberof ActivityResponseObjectAllOf
     */
    org_id?: number;
    /**
     * The note of the activity (HTML format)
     * @type {string}
     * @memberof ActivityResponseObjectAllOf
     */
    note?: string;
    /**
     * The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
     * @type {string}
     * @memberof ActivityResponseObjectAllOf
     */
    location?: string;
    /**
     * Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
     * @type {string}
     * @memberof ActivityResponseObjectAllOf
     */
    public_description?: string;
}

/**
 * Check if a given object implements the ActivityResponseObjectAllOf interface.
 */
export function instanceOfActivityResponseObjectAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityResponseObjectAllOfFromJSON(json: any): ActivityResponseObjectAllOf {
    return ActivityResponseObjectAllOfFromJSONTyped(json, false);
}

export function ActivityResponseObjectAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityResponseObjectAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'due_date': !exists(json, 'due_date') ? undefined : (new Date(json['due_date'])),
        'due_time': !exists(json, 'due_time') ? undefined : json['due_time'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'deal_id': !exists(json, 'deal_id') ? undefined : json['deal_id'],
        'lead_id': !exists(json, 'lead_id') ? undefined : json['lead_id'],
        'person_id': !exists(json, 'person_id') ? undefined : json['person_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'public_description': !exists(json, 'public_description') ? undefined : json['public_description'],
    };
}

export function ActivityResponseObjectAllOfToJSON(value?: ActivityResponseObjectAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'due_date': value.due_date === undefined ? undefined : (value.due_date.toISOString().substr(0,10)),
        'due_time': value.due_time,
        'duration': value.duration,
        'deal_id': value.deal_id,
        'lead_id': value.lead_id,
        'person_id': value.person_id,
        'org_id': value.org_id,
        'note': value.note,
        'location': value.location,
        'public_description': value.public_description,
    };
}

