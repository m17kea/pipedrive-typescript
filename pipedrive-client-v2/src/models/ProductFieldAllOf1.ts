/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProductFieldAllOf1
 */
export interface ProductFieldAllOf1 {
    /**
     * The ID of the product field
     * @type {number}
     * @memberof ProductFieldAllOf1
     */
    id?: number;
    /**
     * The key of the product field
     * @type {string}
     * @memberof ProductFieldAllOf1
     */
    key?: string;
    /**
     * The position (index) of the product field in the detail view
     * @type {number}
     * @memberof ProductFieldAllOf1
     */
    order_nr?: number;
    /**
     * The product field creation time. Format: YYYY-MM-DD HH:MM:SS
     * @type {string}
     * @memberof ProductFieldAllOf1
     */
    add_time?: string;
    /**
     * The product field last update time. Format: YYYY-MM-DD HH:MM:SS
     * @type {string}
     * @memberof ProductFieldAllOf1
     */
    update_time?: string;
    /**
     * The ID of the last user to update the product field
     * @type {number}
     * @memberof ProductFieldAllOf1
     */
    last_updated_by_user_id?: number;
    /**
     * Whether or not the product field is currently active
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    active_flag?: boolean;
    /**
     * Whether or not the product field name and metadata is editable
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    edit_flag?: boolean;
    /**
     * Whether or not the product field is visible in the Add Product Modal
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    add_visible_flag?: boolean;
    /**
     * Whether or not the product field is marked as important
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    important_flag?: boolean;
    /**
     * Whether or not the product field data can be edited
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    bulk_edit_allowed?: boolean;
    /**
     * Whether or not the product field is searchable
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    searchable_flag?: boolean;
    /**
     * Whether or not the product field value can be used when filtering searches
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    filtering_allowed?: boolean;
    /**
     * Whether or not the product field is sortable
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    sortable_flag?: boolean;
    /**
     * Whether or not the product field is mandatory when creating products
     * @type {boolean}
     * @memberof ProductFieldAllOf1
     */
    mandatory_flag?: boolean;
}

/**
 * Check if a given object implements the ProductFieldAllOf1 interface.
 */
export function instanceOfProductFieldAllOf1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProductFieldAllOf1FromJSON(json: any): ProductFieldAllOf1 {
    return ProductFieldAllOf1FromJSONTyped(json, false);
}

export function ProductFieldAllOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductFieldAllOf1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'key': !exists(json, 'key') ? undefined : json['key'],
        'order_nr': !exists(json, 'order_nr') ? undefined : json['order_nr'],
        'add_time': !exists(json, 'add_time') ? undefined : json['add_time'],
        'update_time': !exists(json, 'update_time') ? undefined : json['update_time'],
        'last_updated_by_user_id': !exists(json, 'last_updated_by_user_id') ? undefined : json['last_updated_by_user_id'],
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'edit_flag': !exists(json, 'edit_flag') ? undefined : json['edit_flag'],
        'add_visible_flag': !exists(json, 'add_visible_flag') ? undefined : json['add_visible_flag'],
        'important_flag': !exists(json, 'important_flag') ? undefined : json['important_flag'],
        'bulk_edit_allowed': !exists(json, 'bulk_edit_allowed') ? undefined : json['bulk_edit_allowed'],
        'searchable_flag': !exists(json, 'searchable_flag') ? undefined : json['searchable_flag'],
        'filtering_allowed': !exists(json, 'filtering_allowed') ? undefined : json['filtering_allowed'],
        'sortable_flag': !exists(json, 'sortable_flag') ? undefined : json['sortable_flag'],
        'mandatory_flag': !exists(json, 'mandatory_flag') ? undefined : json['mandatory_flag'],
    };
}

export function ProductFieldAllOf1ToJSON(value?: ProductFieldAllOf1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'key': value.key,
        'order_nr': value.order_nr,
        'add_time': value.add_time,
        'update_time': value.update_time,
        'last_updated_by_user_id': value.last_updated_by_user_id,
        'active_flag': value.active_flag,
        'edit_flag': value.edit_flag,
        'add_visible_flag': value.add_visible_flag,
        'important_flag': value.important_flag,
        'bulk_edit_allowed': value.bulk_edit_allowed,
        'searchable_flag': value.searchable_flag,
        'filtering_allowed': value.filtering_allowed,
        'sortable_flag': value.sortable_flag,
        'mandatory_flag': value.mandatory_flag,
    };
}

