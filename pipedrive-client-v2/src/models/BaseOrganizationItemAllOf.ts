/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseOrganizationItemAllOfPictureId } from './BaseOrganizationItemAllOfPictureId';
import {
    BaseOrganizationItemAllOfPictureIdFromJSON,
    BaseOrganizationItemAllOfPictureIdFromJSONTyped,
    BaseOrganizationItemAllOfPictureIdToJSON,
} from './BaseOrganizationItemAllOfPictureId';
import type { Owner } from './Owner';
import {
    OwnerFromJSON,
    OwnerFromJSONTyped,
    OwnerToJSON,
} from './Owner';

/**
 * 
 * @export
 * @interface BaseOrganizationItemAllOf
 */
export interface BaseOrganizationItemAllOf {
    /**
     * The ID of the organization
     * @type {number}
     * @memberof BaseOrganizationItemAllOf
     */
    id?: number;
    /**
     * The ID of the company related to the organization
     * @type {number}
     * @memberof BaseOrganizationItemAllOf
     */
    company_id?: number;
    /**
     * 
     * @type {Owner}
     * @memberof BaseOrganizationItemAllOf
     */
    owner_id?: Owner;
    /**
     * The name of the organization
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    name?: string;
    /**
     * Whether the organization is active or not
     * @type {boolean}
     * @memberof BaseOrganizationItemAllOf
     */
    active_flag?: boolean;
    /**
     * 
     * @type {BaseOrganizationItemAllOfPictureId}
     * @memberof BaseOrganizationItemAllOf
     */
    picture_id?: BaseOrganizationItemAllOfPictureId;
    /**
     * The country code of the organization
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    country_code?: string;
    /**
     * The first character of the organization name
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    first_char?: string;
    /**
     * The creation date and time of the organization
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    add_time?: string;
    /**
     * The last updated date and time of the organization
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    update_time?: string;
    /**
     * The visibility group ID of who can see the organization
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    visible_to?: string;
    /**
     * The ID of the label
     * @type {number}
     * @memberof BaseOrganizationItemAllOf
     */
    label?: number;
    /**
     * The name of the organization owner
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    owner_name?: string;
    /**
     * The BCC email of the organization
     * @type {string}
     * @memberof BaseOrganizationItemAllOf
     */
    cc_email?: string;
}

/**
 * Check if a given object implements the BaseOrganizationItemAllOf interface.
 */
export function instanceOfBaseOrganizationItemAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BaseOrganizationItemAllOfFromJSON(json: any): BaseOrganizationItemAllOf {
    return BaseOrganizationItemAllOfFromJSONTyped(json, false);
}

export function BaseOrganizationItemAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseOrganizationItemAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
        'owner_id': !exists(json, 'owner_id') ? undefined : OwnerFromJSON(json['owner_id']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'picture_id': !exists(json, 'picture_id') ? undefined : BaseOrganizationItemAllOfPictureIdFromJSON(json['picture_id']),
        'country_code': !exists(json, 'country_code') ? undefined : json['country_code'],
        'first_char': !exists(json, 'first_char') ? undefined : json['first_char'],
        'add_time': !exists(json, 'add_time') ? undefined : json['add_time'],
        'update_time': !exists(json, 'update_time') ? undefined : json['update_time'],
        'visible_to': !exists(json, 'visible_to') ? undefined : json['visible_to'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'owner_name': !exists(json, 'owner_name') ? undefined : json['owner_name'],
        'cc_email': !exists(json, 'cc_email') ? undefined : json['cc_email'],
    };
}

export function BaseOrganizationItemAllOfToJSON(value?: BaseOrganizationItemAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'company_id': value.company_id,
        'owner_id': OwnerToJSON(value.owner_id),
        'name': value.name,
        'active_flag': value.active_flag,
        'picture_id': BaseOrganizationItemAllOfPictureIdToJSON(value.picture_id),
        'country_code': value.country_code,
        'first_char': value.first_char,
        'add_time': value.add_time,
        'update_time': value.update_time,
        'visible_to': value.visible_to,
        'label': value.label,
        'owner_name': value.owner_name,
        'cc_email': value.cc_email,
    };
}

