/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { MailMessageItemForListAllOfFromInner } from './MailMessageItemForListAllOfFromInner';
import {
    MailMessageItemForListAllOfFromInnerFromJSON,
    MailMessageItemForListAllOfFromInnerFromJSONTyped,
    MailMessageItemForListAllOfFromInnerToJSON,
} from './MailMessageItemForListAllOfFromInner';

/**
 * 
 * @export
 * @interface MailMessageItemForList
 */
export interface MailMessageItemForList {
    /**
     * ID of the mail message.
     * @type {number}
     * @memberof MailMessageItemForList
     */
    id?: number;
    /**
     * The array of mail message sender (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForList
     */
    from?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The array of mail message receiver (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForList
     */
    to?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The array of mail message copies (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForList
     */
    cc?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The array of mail message blind copies (object)
     * @type {Array<MailMessageItemForListAllOfFromInner>}
     * @memberof MailMessageItemForList
     */
    bcc?: Array<MailMessageItemForListAllOfFromInner>;
    /**
     * The mail message body URL
     * @type {string}
     * @memberof MailMessageItemForList
     */
    body_url?: string;
    /**
     * The connection account ID
     * @type {string}
     * @memberof MailMessageItemForList
     */
    account_id?: string;
    /**
     * ID of the user whom mail message will be assigned to
     * @type {number}
     * @memberof MailMessageItemForList
     */
    user_id?: number;
    /**
     * ID of the mail message thread
     * @type {number}
     * @memberof MailMessageItemForList
     */
    mail_thread_id?: number;
    /**
     * The subject of mail message
     * @type {string}
     * @memberof MailMessageItemForList
     */
    subject?: string;
    /**
     * The snippet of mail message. Snippet length is up to 225 characters.
     * @type {string}
     * @memberof MailMessageItemForList
     */
    snippet?: string;
    /**
     * The status of tracking mail message. Value is `null` if tracking is not enabled.
     * @type {string}
     * @memberof MailMessageItemForList
     */
    mail_tracking_status?: MailMessageItemForListMailTrackingStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    mail_link_tracking_enabled_flag?: MailMessageItemForListMailLinkTrackingEnabledFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    read_flag?: MailMessageItemForListReadFlagEnum;
    /**
     * If the mail message has a draft status then the value is the mail message object as JSON formatted string, otherwise `null`.
     * @type {string}
     * @memberof MailMessageItemForList
     */
    draft?: string;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    draft_flag?: MailMessageItemForListDraftFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    synced_flag?: MailMessageItemForListSyncedFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    deleted_flag?: MailMessageItemForListDeletedFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    has_body_flag?: MailMessageItemForListHasBodyFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    sent_flag?: MailMessageItemForListSentFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    sent_from_pipedrive_flag?: MailMessageItemForListSentFromPipedriveFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    smart_bcc_flag?: MailMessageItemForListSmartBccFlagEnum;
    /**
     * Creation or receival time of the mail message
     * @type {Date}
     * @memberof MailMessageItemForList
     */
    message_time?: Date;
    /**
     * The insertion into the database time of the mail message
     * @type {Date}
     * @memberof MailMessageItemForList
     */
    add_time?: Date;
    /**
     * The updating time in the database of the mail message
     * @type {Date}
     * @memberof MailMessageItemForList
     */
    update_time?: Date;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    has_attachments_flag?: MailMessageItemForListHasAttachmentsFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    has_inline_attachments_flag?: MailMessageItemForListHasInlineAttachmentsFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof MailMessageItemForList
     */
    has_real_attachments_flag?: MailMessageItemForListHasRealAttachmentsFlagEnum;
    /**
     * The Mail Message ID assigned by the sync provider
     * @type {string}
     * @memberof MailMessageItemForList
     */
    nylas_id?: string;
    /**
     * The name of the S3 bucket
     * @type {string}
     * @memberof MailMessageItemForList
     */
    s3_bucket?: string;
    /**
     * The path of the S3 bucket
     * @type {string}
     * @memberof MailMessageItemForList
     */
    s3_bucket_path?: string;
    /**
     * If the Mail Message has been deleted on the provider side or not
     * @type {boolean}
     * @memberof MailMessageItemForList
     */
    external_deleted_flag?: boolean;
    /**
     * The Mail Message ID assigned by the mail user agent
     * @type {string}
     * @memberof MailMessageItemForList
     */
    mua_message_id?: string;
    /**
     * The ID of the mail template
     * @type {number}
     * @memberof MailMessageItemForList
     */
    template_id?: number;
    /**
     * The add date and time of the Mail Message
     * @type {string}
     * @memberof MailMessageItemForList
     */
    timestamp?: string;
    /**
     * The type of the data item
     * @type {string}
     * @memberof MailMessageItemForList
     */
    item_type?: string;
    /**
     * The ID of the company
     * @type {number}
     * @memberof MailMessageItemForList
     */
    company_id?: number;
}

/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListMailTrackingStatusEnum {
    Opened = 'opened',
    NotOpened = 'not opened'
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListMailLinkTrackingEnabledFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListReadFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListDraftFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListSyncedFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListDeletedFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListHasBodyFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListSentFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListSentFromPipedriveFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListSmartBccFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListHasAttachmentsFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListHasInlineAttachmentsFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum MailMessageItemForListHasRealAttachmentsFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}


/**
 * Check if a given object implements the MailMessageItemForList interface.
 */
export function instanceOfMailMessageItemForList(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MailMessageItemForListFromJSON(json: any): MailMessageItemForList {
    return MailMessageItemForListFromJSONTyped(json, false);
}

export function MailMessageItemForListFromJSONTyped(json: any, ignoreDiscriminator: boolean): MailMessageItemForList {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'from': !exists(json, 'from') ? undefined : ((json['from'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'to': !exists(json, 'to') ? undefined : ((json['to'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'cc': !exists(json, 'cc') ? undefined : ((json['cc'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'bcc': !exists(json, 'bcc') ? undefined : ((json['bcc'] as Array<any>).map(MailMessageItemForListAllOfFromInnerFromJSON)),
        'body_url': !exists(json, 'body_url') ? undefined : json['body_url'],
        'account_id': !exists(json, 'account_id') ? undefined : json['account_id'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
        'mail_thread_id': !exists(json, 'mail_thread_id') ? undefined : json['mail_thread_id'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'snippet': !exists(json, 'snippet') ? undefined : json['snippet'],
        'mail_tracking_status': !exists(json, 'mail_tracking_status') ? undefined : json['mail_tracking_status'],
        'mail_link_tracking_enabled_flag': !exists(json, 'mail_link_tracking_enabled_flag') ? undefined : json['mail_link_tracking_enabled_flag'],
        'read_flag': !exists(json, 'read_flag') ? undefined : json['read_flag'],
        'draft': !exists(json, 'draft') ? undefined : json['draft'],
        'draft_flag': !exists(json, 'draft_flag') ? undefined : json['draft_flag'],
        'synced_flag': !exists(json, 'synced_flag') ? undefined : json['synced_flag'],
        'deleted_flag': !exists(json, 'deleted_flag') ? undefined : json['deleted_flag'],
        'has_body_flag': !exists(json, 'has_body_flag') ? undefined : json['has_body_flag'],
        'sent_flag': !exists(json, 'sent_flag') ? undefined : json['sent_flag'],
        'sent_from_pipedrive_flag': !exists(json, 'sent_from_pipedrive_flag') ? undefined : json['sent_from_pipedrive_flag'],
        'smart_bcc_flag': !exists(json, 'smart_bcc_flag') ? undefined : json['smart_bcc_flag'],
        'message_time': !exists(json, 'message_time') ? undefined : (new Date(json['message_time'])),
        'add_time': !exists(json, 'add_time') ? undefined : (new Date(json['add_time'])),
        'update_time': !exists(json, 'update_time') ? undefined : (new Date(json['update_time'])),
        'has_attachments_flag': !exists(json, 'has_attachments_flag') ? undefined : json['has_attachments_flag'],
        'has_inline_attachments_flag': !exists(json, 'has_inline_attachments_flag') ? undefined : json['has_inline_attachments_flag'],
        'has_real_attachments_flag': !exists(json, 'has_real_attachments_flag') ? undefined : json['has_real_attachments_flag'],
        'nylas_id': !exists(json, 'nylas_id') ? undefined : json['nylas_id'],
        's3_bucket': !exists(json, 's3_bucket') ? undefined : json['s3_bucket'],
        's3_bucket_path': !exists(json, 's3_bucket_path') ? undefined : json['s3_bucket_path'],
        'external_deleted_flag': !exists(json, 'external_deleted_flag') ? undefined : json['external_deleted_flag'],
        'mua_message_id': !exists(json, 'mua_message_id') ? undefined : json['mua_message_id'],
        'template_id': !exists(json, 'template_id') ? undefined : json['template_id'],
        'timestamp': !exists(json, 'timestamp') ? undefined : json['timestamp'],
        'item_type': !exists(json, 'item_type') ? undefined : json['item_type'],
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
    };
}

export function MailMessageItemForListToJSON(value?: MailMessageItemForList | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'from': value.from === undefined ? undefined : ((value.from as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'to': value.to === undefined ? undefined : ((value.to as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'cc': value.cc === undefined ? undefined : ((value.cc as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'bcc': value.bcc === undefined ? undefined : ((value.bcc as Array<any>).map(MailMessageItemForListAllOfFromInnerToJSON)),
        'body_url': value.body_url,
        'account_id': value.account_id,
        'user_id': value.user_id,
        'mail_thread_id': value.mail_thread_id,
        'subject': value.subject,
        'snippet': value.snippet,
        'mail_tracking_status': value.mail_tracking_status,
        'mail_link_tracking_enabled_flag': value.mail_link_tracking_enabled_flag,
        'read_flag': value.read_flag,
        'draft': value.draft,
        'draft_flag': value.draft_flag,
        'synced_flag': value.synced_flag,
        'deleted_flag': value.deleted_flag,
        'has_body_flag': value.has_body_flag,
        'sent_flag': value.sent_flag,
        'sent_from_pipedrive_flag': value.sent_from_pipedrive_flag,
        'smart_bcc_flag': value.smart_bcc_flag,
        'message_time': value.message_time === undefined ? undefined : (value.message_time.toISOString()),
        'add_time': value.add_time === undefined ? undefined : (value.add_time.toISOString()),
        'update_time': value.update_time === undefined ? undefined : (value.update_time.toISOString()),
        'has_attachments_flag': value.has_attachments_flag,
        'has_inline_attachments_flag': value.has_inline_attachments_flag,
        'has_real_attachments_flag': value.has_real_attachments_flag,
        'nylas_id': value.nylas_id,
        's3_bucket': value.s3_bucket,
        's3_bucket_path': value.s3_bucket_path,
        'external_deleted_flag': value.external_deleted_flag,
        'mua_message_id': value.mua_message_id,
        'template_id': value.template_id,
        'timestamp': value.timestamp,
        'item_type': value.item_type,
        'company_id': value.company_id,
    };
}

