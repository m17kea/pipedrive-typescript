/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * The total values of deals for the given period
 * @export
 * @interface GetDealsTimelineResponse200DataTotals
 */
export interface GetDealsTimelineResponse200DataTotals {
    /**
     * The number of deals for the given period
     * @type {number}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    count?: number;
    /**
     * The total values of deals grouped by deal currency
     * @type {object}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    values?: object;
    /**
     * The total weighted values of deals for the given period grouped by deal currency. The weighted value of a deal is calculated as probability times deal value.
     * @type {object}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    weighted_values?: object;
    /**
     * The number of open deals for the given period
     * @type {number}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    open_count?: number;
    /**
     * The total values of open deals for the given period grouped by deal currency
     * @type {object}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    open_values?: object;
    /**
     * The total weighted values of open deals for the given period grouped by deal currency. The weighted value of a deal is calculated as probability times deal value.
     * @type {object}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    weighted_open_values?: object;
    /**
     * The number of won deals for the given period
     * @type {number}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    won_count?: number;
    /**
     * The total values of won deals for the given period grouped by deal currency
     * @type {object}
     * @memberof GetDealsTimelineResponse200DataTotals
     */
    won_values?: object;
}

/**
 * Check if a given object implements the GetDealsTimelineResponse200DataTotals interface.
 */
export function instanceOfGetDealsTimelineResponse200DataTotals(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetDealsTimelineResponse200DataTotalsFromJSON(json: any): GetDealsTimelineResponse200DataTotals {
    return GetDealsTimelineResponse200DataTotalsFromJSONTyped(json, false);
}

export function GetDealsTimelineResponse200DataTotalsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDealsTimelineResponse200DataTotals {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': !exists(json, 'count') ? undefined : json['count'],
        'values': !exists(json, 'values') ? undefined : json['values'],
        'weighted_values': !exists(json, 'weighted_values') ? undefined : json['weighted_values'],
        'open_count': !exists(json, 'open_count') ? undefined : json['open_count'],
        'open_values': !exists(json, 'open_values') ? undefined : json['open_values'],
        'weighted_open_values': !exists(json, 'weighted_open_values') ? undefined : json['weighted_open_values'],
        'won_count': !exists(json, 'won_count') ? undefined : json['won_count'],
        'won_values': !exists(json, 'won_values') ? undefined : json['won_values'],
    };
}

export function GetDealsTimelineResponse200DataTotalsToJSON(value?: GetDealsTimelineResponse200DataTotals | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'values': value.values,
        'weighted_values': value.weighted_values,
        'open_count': value.open_count,
        'open_values': value.open_values,
        'weighted_open_values': value.weighted_open_values,
        'won_count': value.won_count,
        'won_values': value.won_values,
    };
}

