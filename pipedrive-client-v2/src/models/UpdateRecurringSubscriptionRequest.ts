/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateRecurringSubscriptionRequest
 */
export interface UpdateRecurringSubscriptionRequest {
    /**
     * The description of the recurring subscription
     * @type {string}
     * @memberof UpdateRecurringSubscriptionRequest
     */
    description?: string;
    /**
     * The amount of each payment
     * @type {number}
     * @memberof UpdateRecurringSubscriptionRequest
     */
    cycle_amount?: number;
    /**
     * Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
     * @type {Array<object>}
     * @memberof UpdateRecurringSubscriptionRequest
     */
    payments?: Array<object>;
    /**
     * Indicates that the deal value must be set to recurring subscription's MRR value
     * @type {boolean}
     * @memberof UpdateRecurringSubscriptionRequest
     */
    update_deal_value?: boolean;
    /**
     * All payments after that date will be affected. Format: YYYY-MM-DD
     * @type {Date}
     * @memberof UpdateRecurringSubscriptionRequest
     */
    effective_date: Date;
}

/**
 * Check if a given object implements the UpdateRecurringSubscriptionRequest interface.
 */
export function instanceOfUpdateRecurringSubscriptionRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "effective_date" in value;

    return isInstance;
}

export function UpdateRecurringSubscriptionRequestFromJSON(json: any): UpdateRecurringSubscriptionRequest {
    return UpdateRecurringSubscriptionRequestFromJSONTyped(json, false);
}

export function UpdateRecurringSubscriptionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateRecurringSubscriptionRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'description') ? undefined : json['description'],
        'cycle_amount': !exists(json, 'cycle_amount') ? undefined : json['cycle_amount'],
        'payments': !exists(json, 'payments') ? undefined : json['payments'],
        'update_deal_value': !exists(json, 'update_deal_value') ? undefined : json['update_deal_value'],
        'effective_date': (new Date(json['effective_date'])),
    };
}

export function UpdateRecurringSubscriptionRequestToJSON(value?: UpdateRecurringSubscriptionRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'description': value.description,
        'cycle_amount': value.cycle_amount,
        'payments': value.payments,
        'update_deal_value': value.update_deal_value,
        'effective_date': (value.effective_date.toISOString().substr(0,10)),
    };
}

