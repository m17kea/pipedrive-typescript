/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PersonItemAllOfPictureIdAllOf1Pictures } from './PersonItemAllOfPictureIdAllOf1Pictures';
import {
    PersonItemAllOfPictureIdAllOf1PicturesFromJSON,
    PersonItemAllOfPictureIdAllOf1PicturesFromJSONTyped,
    PersonItemAllOfPictureIdAllOf1PicturesToJSON,
} from './PersonItemAllOfPictureIdAllOf1Pictures';

/**
 * 
 * @export
 * @interface PersonItemAllOfPictureIdAllOf1
 */
export interface PersonItemAllOfPictureIdAllOf1 {
    /**
     * The type of item the picture is related to
     * @type {string}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    item_type?: string;
    /**
     * The ID of related item
     * @type {number}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    item_id?: number;
    /**
     * Whether the associated picture is active or not
     * @type {boolean}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    active_flag?: boolean;
    /**
     * The add time of the picture
     * @type {string}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    add_time?: string;
    /**
     * The update time of the picture
     * @type {string}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    update_time?: string;
    /**
     * The ID of the user who added the picture
     * @type {number}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    added_by_user_id?: number;
    /**
     * 
     * @type {PersonItemAllOfPictureIdAllOf1Pictures}
     * @memberof PersonItemAllOfPictureIdAllOf1
     */
    pictures?: PersonItemAllOfPictureIdAllOf1Pictures;
}

/**
 * Check if a given object implements the PersonItemAllOfPictureIdAllOf1 interface.
 */
export function instanceOfPersonItemAllOfPictureIdAllOf1(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PersonItemAllOfPictureIdAllOf1FromJSON(json: any): PersonItemAllOfPictureIdAllOf1 {
    return PersonItemAllOfPictureIdAllOf1FromJSONTyped(json, false);
}

export function PersonItemAllOfPictureIdAllOf1FromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonItemAllOfPictureIdAllOf1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'item_type': !exists(json, 'item_type') ? undefined : json['item_type'],
        'item_id': !exists(json, 'item_id') ? undefined : json['item_id'],
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'add_time': !exists(json, 'add_time') ? undefined : json['add_time'],
        'update_time': !exists(json, 'update_time') ? undefined : json['update_time'],
        'added_by_user_id': !exists(json, 'added_by_user_id') ? undefined : json['added_by_user_id'],
        'pictures': !exists(json, 'pictures') ? undefined : PersonItemAllOfPictureIdAllOf1PicturesFromJSON(json['pictures']),
    };
}

export function PersonItemAllOfPictureIdAllOf1ToJSON(value?: PersonItemAllOfPictureIdAllOf1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'item_type': value.item_type,
        'item_id': value.item_id,
        'active_flag': value.active_flag,
        'add_time': value.add_time,
        'update_time': value.update_time,
        'added_by_user_id': value.added_by_user_id,
        'pictures': PersonItemAllOfPictureIdAllOf1PicturesToJSON(value.pictures),
    };
}

