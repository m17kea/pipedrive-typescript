/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AddOrUpdateGoalResponse200DataGoalTypeParams } from './AddOrUpdateGoalResponse200DataGoalTypeParams';
import {
    AddOrUpdateGoalResponse200DataGoalTypeParamsFromJSON,
    AddOrUpdateGoalResponse200DataGoalTypeParamsFromJSONTyped,
    AddOrUpdateGoalResponse200DataGoalTypeParamsToJSON,
} from './AddOrUpdateGoalResponse200DataGoalTypeParams';

/**
 * The type of the goal
 * @export
 * @interface AddOrUpdateGoalResponse200DataGoalType
 */
export interface AddOrUpdateGoalResponse200DataGoalType {
    /**
     * The name of the goal type
     * @type {string}
     * @memberof AddOrUpdateGoalResponse200DataGoalType
     */
    name?: string;
    /**
     * 
     * @type {AddOrUpdateGoalResponse200DataGoalTypeParams}
     * @memberof AddOrUpdateGoalResponse200DataGoalType
     */
    params?: AddOrUpdateGoalResponse200DataGoalTypeParams;
}

/**
 * Check if a given object implements the AddOrUpdateGoalResponse200DataGoalType interface.
 */
export function instanceOfAddOrUpdateGoalResponse200DataGoalType(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AddOrUpdateGoalResponse200DataGoalTypeFromJSON(json: any): AddOrUpdateGoalResponse200DataGoalType {
    return AddOrUpdateGoalResponse200DataGoalTypeFromJSONTyped(json, false);
}

export function AddOrUpdateGoalResponse200DataGoalTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddOrUpdateGoalResponse200DataGoalType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'params': !exists(json, 'params') ? undefined : AddOrUpdateGoalResponse200DataGoalTypeParamsFromJSON(json['params']),
    };
}

export function AddOrUpdateGoalResponse200DataGoalTypeToJSON(value?: AddOrUpdateGoalResponse200DataGoalType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'params': AddOrUpdateGoalResponse200DataGoalTypeParamsToJSON(value.params),
    };
}

