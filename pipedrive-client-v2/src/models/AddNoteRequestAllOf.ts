/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddNoteRequestAllOf
 */
export interface AddNoteRequestAllOf {
    /**
     * The content of the note in HTML format. Subject to sanitization on the back-end.
     * @type {string}
     * @memberof AddNoteRequestAllOf
     */
    content: string;
    /**
     * The ID of the lead the note will be attached to. This property is required unless one of (`deal_id/person_id/org_id`) is specified.
     * @type {string}
     * @memberof AddNoteRequestAllOf
     */
    lead_id?: string;
    /**
     * The ID of the deal the note will be attached to. This property is required unless one of (`lead_id/person_id/org_id`) is specified.
     * @type {number}
     * @memberof AddNoteRequestAllOf
     */
    deal_id?: number;
    /**
     * The ID of the person this note will be attached to. This property is required unless one of (`deal_id/lead_id/org_id`) is specified.
     * @type {number}
     * @memberof AddNoteRequestAllOf
     */
    person_id?: number;
    /**
     * The ID of the organization this note will be attached to. This property is required unless one of (`deal_id/lead_id/person_id`) is specified.
     * @type {number}
     * @memberof AddNoteRequestAllOf
     */
    org_id?: number;
}

/**
 * Check if a given object implements the AddNoteRequestAllOf interface.
 */
export function instanceOfAddNoteRequestAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "content" in value;

    return isInstance;
}

export function AddNoteRequestAllOfFromJSON(json: any): AddNoteRequestAllOf {
    return AddNoteRequestAllOfFromJSONTyped(json, false);
}

export function AddNoteRequestAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddNoteRequestAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': json['content'],
        'lead_id': !exists(json, 'lead_id') ? undefined : json['lead_id'],
        'deal_id': !exists(json, 'deal_id') ? undefined : json['deal_id'],
        'person_id': !exists(json, 'person_id') ? undefined : json['person_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
    };
}

export function AddNoteRequestAllOfToJSON(value?: AddNoteRequestAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content,
        'lead_id': value.lead_id,
        'deal_id': value.deal_id,
        'person_id': value.person_id,
        'org_id': value.org_id,
    };
}

