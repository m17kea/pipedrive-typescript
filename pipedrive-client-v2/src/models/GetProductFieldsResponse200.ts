/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProductField } from './ProductField';
import {
    ProductFieldFromJSON,
    ProductFieldFromJSONTyped,
    ProductFieldToJSON,
} from './ProductField';

/**
 * 
 * @export
 * @interface GetProductFieldsResponse200
 */
export interface GetProductFieldsResponse200 {
    /**
     * If the response is successful or not
     * @type {boolean}
     * @memberof GetProductFieldsResponse200
     */
    success?: boolean;
    /**
     * Array containing data for all product fields
     * @type {Array<ProductField>}
     * @memberof GetProductFieldsResponse200
     */
    data?: Array<ProductField>;
    /**
     * Additional data for the product field, such as pagination
     * @type {object}
     * @memberof GetProductFieldsResponse200
     */
    additional_data?: object;
}

/**
 * Check if a given object implements the GetProductFieldsResponse200 interface.
 */
export function instanceOfGetProductFieldsResponse200(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetProductFieldsResponse200FromJSON(json: any): GetProductFieldsResponse200 {
    return GetProductFieldsResponse200FromJSONTyped(json, false);
}

export function GetProductFieldsResponse200FromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProductFieldsResponse200 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(ProductFieldFromJSON)),
        'additional_data': !exists(json, 'additional_data') ? undefined : json['additional_data'],
    };
}

export function GetProductFieldsResponse200ToJSON(value?: GetProductFieldsResponse200 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(ProductFieldToJSON)),
        'additional_data': value.additional_data,
    };
}

