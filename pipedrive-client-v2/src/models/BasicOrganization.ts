/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BasicOrganization
 */
export interface BasicOrganization {
    /**
     * The ID of the user who will be marked as the owner of this organization. When omitted, the authorized user ID will be used.
     * @type {number}
     * @memberof BasicOrganization
     */
    owner_id?: number;
    /**
     * 
     * @type {string}
     * @memberof BasicOrganization
     */
    visible_to?: BasicOrganizationVisibleToEnum;
}

/**
* @export
* @enum {string}
*/
export enum BasicOrganizationVisibleToEnum {
    _1 = '1',
    _3 = '3',
    _5 = '5',
    _7 = '7'
}


/**
 * Check if a given object implements the BasicOrganization interface.
 */
export function instanceOfBasicOrganization(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BasicOrganizationFromJSON(json: any): BasicOrganization {
    return BasicOrganizationFromJSONTyped(json, false);
}

export function BasicOrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): BasicOrganization {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'owner_id': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'visible_to': !exists(json, 'visible_to') ? undefined : json['visible_to'],
    };
}

export function BasicOrganizationToJSON(value?: BasicOrganization | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'owner_id': value.owner_id,
        'visible_to': value.visible_to,
    };
}

