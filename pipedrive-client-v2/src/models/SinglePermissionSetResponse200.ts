/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SinglePermissionSetResponse200
 */
export interface SinglePermissionSetResponse200 {
    /**
     * The ID of user permission set
     * @type {string}
     * @memberof SinglePermissionSetResponse200
     */
    id?: string;
    /**
     * The name of the permission set
     * @type {string}
     * @memberof SinglePermissionSetResponse200
     */
    name?: string;
    /**
     * The description of the permission set
     * @type {string}
     * @memberof SinglePermissionSetResponse200
     */
    description?: string;
    /**
     * The app that permission set belongs to
     * @type {string}
     * @memberof SinglePermissionSetResponse200
     */
    app?: SinglePermissionSetResponse200AppEnum;
    /**
     * The type of permission set
     * @type {string}
     * @memberof SinglePermissionSetResponse200
     */
    type?: SinglePermissionSetResponse200TypeEnum;
    /**
     * The number of users assigned to this permission set
     * @type {number}
     * @memberof SinglePermissionSetResponse200
     */
    assignment_count?: number;
    /**
     * A permission assigned to this permission set
     * @type {Array<string>}
     * @memberof SinglePermissionSetResponse200
     */
    contents?: Array<string>;
}

/**
* @export
* @enum {string}
*/
export enum SinglePermissionSetResponse200AppEnum {
    Sales = 'sales',
    Projects = 'projects',
    Campaigns = 'campaigns',
    Global = 'global',
    AccountSettings = 'account_settings'
}
/**
* @export
* @enum {string}
*/
export enum SinglePermissionSetResponse200TypeEnum {
    Admin = 'admin',
    Manager = 'manager',
    Regular = 'regular',
    Custom = 'custom'
}


/**
 * Check if a given object implements the SinglePermissionSetResponse200 interface.
 */
export function instanceOfSinglePermissionSetResponse200(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SinglePermissionSetResponse200FromJSON(json: any): SinglePermissionSetResponse200 {
    return SinglePermissionSetResponse200FromJSONTyped(json, false);
}

export function SinglePermissionSetResponse200FromJSONTyped(json: any, ignoreDiscriminator: boolean): SinglePermissionSetResponse200 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'app': !exists(json, 'app') ? undefined : json['app'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'assignment_count': !exists(json, 'assignment_count') ? undefined : json['assignment_count'],
        'contents': !exists(json, 'contents') ? undefined : json['contents'],
    };
}

export function SinglePermissionSetResponse200ToJSON(value?: SinglePermissionSetResponse200 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'app': value.app,
        'type': value.type,
        'assignment_count': value.assignment_count,
        'contents': value.contents,
    };
}

