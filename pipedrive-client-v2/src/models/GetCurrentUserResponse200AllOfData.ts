/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetCurrentUserResponse200AllOfDataAllOfLanguage } from './GetCurrentUserResponse200AllOfDataAllOfLanguage';
import {
    GetCurrentUserResponse200AllOfDataAllOfLanguageFromJSON,
    GetCurrentUserResponse200AllOfDataAllOfLanguageFromJSONTyped,
    GetCurrentUserResponse200AllOfDataAllOfLanguageToJSON,
} from './GetCurrentUserResponse200AllOfDataAllOfLanguage';
import type { GetRecentsResponse200DataInnerAnyOf11DataAccessInner } from './GetRecentsResponse200DataInnerAnyOf11DataAccessInner';
import {
    GetRecentsResponse200DataInnerAnyOf11DataAccessInnerFromJSON,
    GetRecentsResponse200DataInnerAnyOf11DataAccessInnerFromJSONTyped,
    GetRecentsResponse200DataInnerAnyOf11DataAccessInnerToJSON,
} from './GetRecentsResponse200DataInnerAnyOf11DataAccessInner';

/**
 * 
 * @export
 * @interface GetCurrentUserResponse200AllOfData
 */
export interface GetCurrentUserResponse200AllOfData {
    /**
     * The user ID
     * @type {number}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    id?: number;
    /**
     * The user name
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    name?: string;
    /**
     * The user default currency
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    default_currency?: string;
    /**
     * The user locale
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    locale?: string;
    /**
     * The user language ID
     * @type {number}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    lang?: number;
    /**
     * The user email
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    email?: string;
    /**
     * The user phone
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    phone?: string | null;
    /**
     * Boolean that indicates whether the user is activated
     * @type {boolean}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    activated?: boolean;
    /**
     * The last login date and time of the user. Format: YYYY-MM-DD HH:MM:SS
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    last_login?: string;
    /**
     * The creation date and time of the user. Format: YYYY-MM-DD HH:MM:SS
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    created?: string;
    /**
     * The last modification date and time of the user. Format: YYYY-MM-DD HH:MM:SS
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    modified?: string | null;
    /**
     * Boolean that indicates whether the user has created a company
     * @type {boolean}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    has_created_company?: boolean;
    /**
     * 
     * @type {Array<GetRecentsResponse200DataInnerAnyOf11DataAccessInner>}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    access?: Array<GetRecentsResponse200DataInnerAnyOf11DataAccessInner>;
    /**
     * Boolean that indicates whether the user is activated
     * @type {boolean}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    active_flag?: boolean;
    /**
     * The user timezone name
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    timezone_name?: string;
    /**
     * The user timezone offset
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    timezone_offset?: string;
    /**
     * The ID of the user role
     * @type {number}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    role_id?: number;
    /**
     * The user icon URL
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    icon_url?: string | null;
    /**
     * Boolean that indicates if the requested user is the same which is logged in (in this case, always true)
     * @type {boolean}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    is_you?: boolean;
    /**
     * The user company ID
     * @type {number}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    company_id?: number;
    /**
     * The user company name
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    company_name?: string;
    /**
     * The user company domain
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    company_domain?: string;
    /**
     * The user company country
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    company_country?: string;
    /**
     * The user company industry
     * @type {string}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    company_industry?: string;
    /**
     * 
     * @type {GetCurrentUserResponse200AllOfDataAllOfLanguage}
     * @memberof GetCurrentUserResponse200AllOfData
     */
    language?: GetCurrentUserResponse200AllOfDataAllOfLanguage;
}

/**
 * Check if a given object implements the GetCurrentUserResponse200AllOfData interface.
 */
export function instanceOfGetCurrentUserResponse200AllOfData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetCurrentUserResponse200AllOfDataFromJSON(json: any): GetCurrentUserResponse200AllOfData {
    return GetCurrentUserResponse200AllOfDataFromJSONTyped(json, false);
}

export function GetCurrentUserResponse200AllOfDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCurrentUserResponse200AllOfData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'default_currency': !exists(json, 'default_currency') ? undefined : json['default_currency'],
        'locale': !exists(json, 'locale') ? undefined : json['locale'],
        'lang': !exists(json, 'lang') ? undefined : json['lang'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'activated': !exists(json, 'activated') ? undefined : json['activated'],
        'last_login': !exists(json, 'last_login') ? undefined : json['last_login'],
        'created': !exists(json, 'created') ? undefined : json['created'],
        'modified': !exists(json, 'modified') ? undefined : json['modified'],
        'has_created_company': !exists(json, 'has_created_company') ? undefined : json['has_created_company'],
        'access': !exists(json, 'access') ? undefined : ((json['access'] as Array<any>).map(GetRecentsResponse200DataInnerAnyOf11DataAccessInnerFromJSON)),
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'timezone_name': !exists(json, 'timezone_name') ? undefined : json['timezone_name'],
        'timezone_offset': !exists(json, 'timezone_offset') ? undefined : json['timezone_offset'],
        'role_id': !exists(json, 'role_id') ? undefined : json['role_id'],
        'icon_url': !exists(json, 'icon_url') ? undefined : json['icon_url'],
        'is_you': !exists(json, 'is_you') ? undefined : json['is_you'],
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
        'company_name': !exists(json, 'company_name') ? undefined : json['company_name'],
        'company_domain': !exists(json, 'company_domain') ? undefined : json['company_domain'],
        'company_country': !exists(json, 'company_country') ? undefined : json['company_country'],
        'company_industry': !exists(json, 'company_industry') ? undefined : json['company_industry'],
        'language': !exists(json, 'language') ? undefined : GetCurrentUserResponse200AllOfDataAllOfLanguageFromJSON(json['language']),
    };
}

export function GetCurrentUserResponse200AllOfDataToJSON(value?: GetCurrentUserResponse200AllOfData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'default_currency': value.default_currency,
        'locale': value.locale,
        'lang': value.lang,
        'email': value.email,
        'phone': value.phone,
        'activated': value.activated,
        'last_login': value.last_login,
        'created': value.created,
        'modified': value.modified,
        'has_created_company': value.has_created_company,
        'access': value.access === undefined ? undefined : ((value.access as Array<any>).map(GetRecentsResponse200DataInnerAnyOf11DataAccessInnerToJSON)),
        'active_flag': value.active_flag,
        'timezone_name': value.timezone_name,
        'timezone_offset': value.timezone_offset,
        'role_id': value.role_id,
        'icon_url': value.icon_url,
        'is_you': value.is_you,
        'company_id': value.company_id,
        'company_name': value.company_name,
        'company_domain': value.company_domain,
        'company_country': value.company_country,
        'company_industry': value.company_industry,
        'language': GetCurrentUserResponse200AllOfDataAllOfLanguageToJSON(value.language),
    };
}

