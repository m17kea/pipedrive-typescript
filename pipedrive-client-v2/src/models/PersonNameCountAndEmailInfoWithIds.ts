/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PersonNameCountAndEmailInfoWithIds
 */
export interface PersonNameCountAndEmailInfoWithIds {
    /**
     * The ID of the owner related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    owner_id?: number;
    /**
     * The ID of the organization related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    org_id?: number;
    /**
     * The ID of the person with what the main person was merged
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    merge_what_id?: number;
    /**
     * The name of the person
     * @type {string}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    name?: string;
    /**
     * The first name of the person
     * @type {string}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    first_name?: string;
    /**
     * The last name of the person
     * @type {string}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    last_name?: string;
    /**
     * The count of email messages related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    email_messages_count?: number;
    /**
     * The count of activities related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    activities_count?: number;
    /**
     * The count of done activities related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    done_activities_count?: number;
    /**
     * The count of undone activities related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    undone_activities_count?: number;
    /**
     * The count of files related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    files_count?: number;
    /**
     * The count of notes related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    notes_count?: number;
    /**
     * The count of followers related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    followers_count?: number;
    /**
     * The date and time of the last incoming email associated with the person
     * @type {string}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    last_incoming_mail_time?: string;
    /**
     * The date and time of the last outgoing email associated with the person
     * @type {string}
     * @memberof PersonNameCountAndEmailInfoWithIds
     */
    last_outgoing_mail_time?: string;
}

/**
 * Check if a given object implements the PersonNameCountAndEmailInfoWithIds interface.
 */
export function instanceOfPersonNameCountAndEmailInfoWithIds(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PersonNameCountAndEmailInfoWithIdsFromJSON(json: any): PersonNameCountAndEmailInfoWithIds {
    return PersonNameCountAndEmailInfoWithIdsFromJSONTyped(json, false);
}

export function PersonNameCountAndEmailInfoWithIdsFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonNameCountAndEmailInfoWithIds {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'owner_id': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
        'merge_what_id': !exists(json, 'merge_what_id') ? undefined : json['merge_what_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'first_name': !exists(json, 'first_name') ? undefined : json['first_name'],
        'last_name': !exists(json, 'last_name') ? undefined : json['last_name'],
        'email_messages_count': !exists(json, 'email_messages_count') ? undefined : json['email_messages_count'],
        'activities_count': !exists(json, 'activities_count') ? undefined : json['activities_count'],
        'done_activities_count': !exists(json, 'done_activities_count') ? undefined : json['done_activities_count'],
        'undone_activities_count': !exists(json, 'undone_activities_count') ? undefined : json['undone_activities_count'],
        'files_count': !exists(json, 'files_count') ? undefined : json['files_count'],
        'notes_count': !exists(json, 'notes_count') ? undefined : json['notes_count'],
        'followers_count': !exists(json, 'followers_count') ? undefined : json['followers_count'],
        'last_incoming_mail_time': !exists(json, 'last_incoming_mail_time') ? undefined : json['last_incoming_mail_time'],
        'last_outgoing_mail_time': !exists(json, 'last_outgoing_mail_time') ? undefined : json['last_outgoing_mail_time'],
    };
}

export function PersonNameCountAndEmailInfoWithIdsToJSON(value?: PersonNameCountAndEmailInfoWithIds | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'owner_id': value.owner_id,
        'org_id': value.org_id,
        'merge_what_id': value.merge_what_id,
        'name': value.name,
        'first_name': value.first_name,
        'last_name': value.last_name,
        'email_messages_count': value.email_messages_count,
        'activities_count': value.activities_count,
        'done_activities_count': value.done_activities_count,
        'undone_activities_count': value.undone_activities_count,
        'files_count': value.files_count,
        'notes_count': value.notes_count,
        'followers_count': value.followers_count,
        'last_incoming_mail_time': value.last_incoming_mail_time,
        'last_outgoing_mail_time': value.last_outgoing_mail_time,
    };
}

