/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddCallLogResponse200AllOfData
 */
export interface AddCallLogResponse200AllOfData {
    /**
     * The ID of the owner of the call log. Please note that a user without account settings access cannot create call logs for other users.
     * @type {number}
     * @memberof AddCallLogResponse200AllOfData
     */
    user_id?: number;
    /**
     * If specified, this activity will be converted into a call log, with the information provided. When this field is used, you don't need to specify `deal_id`, `person_id` or `org_id`, as they will be ignored in favor of the values already available in the activity.
     * @type {number}
     * @memberof AddCallLogResponse200AllOfData
     */
    activity_id?: number;
    /**
     * The name of the activity this call is attached to
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    subject?: string;
    /**
     * The duration of the call in seconds
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    duration?: string;
    /**
     * Describes the outcome of the call
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    outcome: AddCallLogResponse200AllOfDataOutcomeEnum;
    /**
     * The number that made the call
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    from_phone_number?: string;
    /**
     * The number called
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    to_phone_number: string;
    /**
     * The date and time of the start of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
     * @type {Date}
     * @memberof AddCallLogResponse200AllOfData
     */
    start_time: Date;
    /**
     * The date and time of the end of the call in UTC. Format: YYYY-MM-DD HH:MM:SS.
     * @type {Date}
     * @memberof AddCallLogResponse200AllOfData
     */
    end_time: Date;
    /**
     * The ID of the person this call is associated with
     * @type {number}
     * @memberof AddCallLogResponse200AllOfData
     */
    person_id?: number;
    /**
     * The ID of the organization this call is associated with
     * @type {number}
     * @memberof AddCallLogResponse200AllOfData
     */
    org_id?: number;
    /**
     * The ID of the deal this call is associated with
     * @type {number}
     * @memberof AddCallLogResponse200AllOfData
     */
    deal_id?: number;
    /**
     * The note for the call log in HTML format
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    note?: string;
    /**
     * The call log ID, generated when the call log was created
     * @type {string}
     * @memberof AddCallLogResponse200AllOfData
     */
    id?: string;
    /**
     * If the call log has an audio recording attached, the value should be true
     * @type {boolean}
     * @memberof AddCallLogResponse200AllOfData
     */
    has_recording?: boolean;
    /**
     * The company ID of the owner of the call log
     * @type {number}
     * @memberof AddCallLogResponse200AllOfData
     */
    company_id?: number;
}

/**
* @export
* @enum {string}
*/
export enum AddCallLogResponse200AllOfDataOutcomeEnum {
    Connected = 'connected',
    NoAnswer = 'no_answer',
    LeftMessage = 'left_message',
    LeftVoicemail = 'left_voicemail',
    WrongNumber = 'wrong_number',
    Busy = 'busy'
}


/**
 * Check if a given object implements the AddCallLogResponse200AllOfData interface.
 */
export function instanceOfAddCallLogResponse200AllOfData(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "outcome" in value;
    isInstance = isInstance && "to_phone_number" in value;
    isInstance = isInstance && "start_time" in value;
    isInstance = isInstance && "end_time" in value;

    return isInstance;
}

export function AddCallLogResponse200AllOfDataFromJSON(json: any): AddCallLogResponse200AllOfData {
    return AddCallLogResponse200AllOfDataFromJSONTyped(json, false);
}

export function AddCallLogResponse200AllOfDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddCallLogResponse200AllOfData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
        'activity_id': !exists(json, 'activity_id') ? undefined : json['activity_id'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'outcome': json['outcome'],
        'from_phone_number': !exists(json, 'from_phone_number') ? undefined : json['from_phone_number'],
        'to_phone_number': json['to_phone_number'],
        'start_time': (new Date(json['start_time'])),
        'end_time': (new Date(json['end_time'])),
        'person_id': !exists(json, 'person_id') ? undefined : json['person_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
        'deal_id': !exists(json, 'deal_id') ? undefined : json['deal_id'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'has_recording': !exists(json, 'has_recording') ? undefined : json['has_recording'],
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
    };
}

export function AddCallLogResponse200AllOfDataToJSON(value?: AddCallLogResponse200AllOfData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user_id': value.user_id,
        'activity_id': value.activity_id,
        'subject': value.subject,
        'duration': value.duration,
        'outcome': value.outcome,
        'from_phone_number': value.from_phone_number,
        'to_phone_number': value.to_phone_number,
        'start_time': (value.start_time.toISOString()),
        'end_time': (value.end_time.toISOString()),
        'person_id': value.person_id,
        'org_id': value.org_id,
        'deal_id': value.deal_id,
        'note': value.note,
        'id': value.id,
        'has_recording': value.has_recording,
        'company_id': value.company_id,
    };
}

