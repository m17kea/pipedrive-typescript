/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddChannel200ResponseData
 */
export interface AddChannel200ResponseData {
    /**
     * The unique channel ID used internally in omnichannel-api and the frontend of the extension
     * @type {string}
     * @memberof AddChannel200ResponseData
     */
    id?: string;
    /**
     * The name of the channel
     * @type {string}
     * @memberof AddChannel200ResponseData
     */
    name?: string;
    /**
     * The URL for an icon that represents your channel
     * @type {string}
     * @memberof AddChannel200ResponseData
     */
    avatar_url?: string;
    /**
     * The channel ID you specified while creating the channel
     * @type {string}
     * @memberof AddChannel200ResponseData
     */
    provider_channel_id?: string;
    /**
     * The client_id of your app in Pipedrive marketplace
     * @type {string}
     * @memberof AddChannel200ResponseData
     */
    marketplace_client_id?: string;
    /**
     * The ID of the user's company in Pipedrive
     * @type {number}
     * @memberof AddChannel200ResponseData
     */
    pd_company_id?: number;
    /**
     * The ID of the user in Pipedrive
     * @type {number}
     * @memberof AddChannel200ResponseData
     */
    pd_user_id?: number;
    /**
     * The date and time when your channel was created in the API
     * @type {Date}
     * @memberof AddChannel200ResponseData
     */
    created_at?: Date;
    /**
     * Value of the provider_type sent to this endpoint
     * @type {string}
     * @memberof AddChannel200ResponseData
     */
    provider_type?: AddChannel200ResponseDataProviderTypeEnum;
    /**
     * Value of the template_support sent to this endpoint
     * @type {boolean}
     * @memberof AddChannel200ResponseData
     */
    template_support?: boolean;
}

/**
* @export
* @enum {string}
*/
export enum AddChannel200ResponseDataProviderTypeEnum {
    Facebook = 'facebook',
    Whatsapp = 'whatsapp',
    Other = 'other'
}


/**
 * Check if a given object implements the AddChannel200ResponseData interface.
 */
export function instanceOfAddChannel200ResponseData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AddChannel200ResponseDataFromJSON(json: any): AddChannel200ResponseData {
    return AddChannel200ResponseDataFromJSONTyped(json, false);
}

export function AddChannel200ResponseDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddChannel200ResponseData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'avatar_url': !exists(json, 'avatar_url') ? undefined : json['avatar_url'],
        'provider_channel_id': !exists(json, 'provider_channel_id') ? undefined : json['provider_channel_id'],
        'marketplace_client_id': !exists(json, 'marketplace_client_id') ? undefined : json['marketplace_client_id'],
        'pd_company_id': !exists(json, 'pd_company_id') ? undefined : json['pd_company_id'],
        'pd_user_id': !exists(json, 'pd_user_id') ? undefined : json['pd_user_id'],
        'created_at': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'provider_type': !exists(json, 'provider_type') ? undefined : json['provider_type'],
        'template_support': !exists(json, 'template_support') ? undefined : json['template_support'],
    };
}

export function AddChannel200ResponseDataToJSON(value?: AddChannel200ResponseData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'avatar_url': value.avatar_url,
        'provider_channel_id': value.provider_channel_id,
        'marketplace_client_id': value.marketplace_client_id,
        'pd_company_id': value.pd_company_id,
        'pd_user_id': value.pd_user_id,
        'created_at': value.created_at === undefined ? undefined : (value.created_at.toISOString()),
        'provider_type': value.provider_type,
        'template_support': value.template_support,
    };
}

