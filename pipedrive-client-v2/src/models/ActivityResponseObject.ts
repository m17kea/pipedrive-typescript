/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ActivityResponseObject
 */
export interface ActivityResponseObject {
    /**
     * The due date of the activity. Format: YYYY-MM-DD
     * @type {Date}
     * @memberof ActivityResponseObject
     */
    due_date?: Date;
    /**
     * The due time of the activity in UTC. Format: HH:MM
     * @type {string}
     * @memberof ActivityResponseObject
     */
    due_time?: string;
    /**
     * The duration of the activity. Format: HH:MM
     * @type {string}
     * @memberof ActivityResponseObject
     */
    duration?: string;
    /**
     * The ID of the deal this activity is associated with
     * @type {number}
     * @memberof ActivityResponseObject
     */
    deal_id?: number;
    /**
     * The ID of the lead in the UUID format this activity is associated with
     * @type {string}
     * @memberof ActivityResponseObject
     */
    lead_id?: string;
    /**
     * The ID of the person this activity is associated with
     * @type {number}
     * @memberof ActivityResponseObject
     */
    person_id?: number;
    /**
     * The ID of the organization this activity is associated with
     * @type {number}
     * @memberof ActivityResponseObject
     */
    org_id?: number;
    /**
     * The note of the activity (HTML format)
     * @type {string}
     * @memberof ActivityResponseObject
     */
    note?: string;
    /**
     * The address of the activity. Pipedrive will automatically check if the location matches a geo-location on Google maps.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location?: string;
    /**
     * Additional details about the activity that is synced to your external calendar. Unlike the note added to the activity, the description is publicly visible to any guests added to the activity.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    public_description?: string;
    /**
     * The activity ID, generated when the activity was created
     * @type {string}
     * @memberof ActivityResponseObject
     */
    id?: string;
    /**
     * Whether the activity is done or not
     * @type {boolean}
     * @memberof ActivityResponseObject
     */
    done?: boolean;
    /**
     * The subject of the activity
     * @type {string}
     * @memberof ActivityResponseObject
     */
    subject?: string;
    /**
     * The type of the activity. This is in correlation with the `key_string` parameter of ActivityTypes.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    type?: string;
    /**
     * The ID of the user whom the activity is assigned to
     * @type {number}
     * @memberof ActivityResponseObject
     */
    user_id?: number;
    /**
     * List of multiple persons (participants) this activity is associated with
     * @type {Array<object>}
     * @memberof ActivityResponseObject
     */
    participants?: Array<object>;
    /**
     * Marks if the activity is set as 'Busy' or 'Free'. If the flag is set to `true`, your customers will not be able to book that time slot through any Scheduler links. The flag can also be unset. When the value of the flag is unset (`null`), the flag defaults to 'Busy' if it has a time set, and 'Free' if it is an all-day event without specified time.
     * @type {boolean}
     * @memberof ActivityResponseObject
     */
    busy_flag?: ActivityResponseObjectBusyFlagEnum;
    /**
     * The attendees of the activity. This can be either your existing Pipedrive contacts or an external email address.
     * @type {Array<object>}
     * @memberof ActivityResponseObject
     */
    attendees?: Array<object>;
    /**
     * The user's company ID
     * @type {number}
     * @memberof ActivityResponseObject
     */
    company_id?: number;
    /**
     * If the activity references some other object, it is indicated here. For example, value `Salesphone` refers to activities created with Caller.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    reference_type?: string;
    /**
     * Together with the `reference_type`, gives the ID of the other object
     * @type {number}
     * @memberof ActivityResponseObject
     */
    reference_id?: number;
    /**
     * The ID of Marketplace app, which is connected to this activity
     * @type {string}
     * @memberof ActivityResponseObject
     */
    conference_meeting_client?: string;
    /**
     * The link to join the meeting which is associated with this activity
     * @type {string}
     * @memberof ActivityResponseObject
     */
    conference_meeting_url?: string;
    /**
     * The meeting ID of the meeting provider (Zoom, MS Teams etc.) that is associated with this activity
     * @type {string}
     * @memberof ActivityResponseObject
     */
    conference_meeting_id?: string;
    /**
     * The creation date and time of the activity in UTC. Format: YYYY-MM-DD HH:MM:SS.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    add_time?: string;
    /**
     * The date and time this activity was marked as done. Format: YYYY-MM-DD HH:MM:SS.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    marked_as_done_time?: string;
    /**
     * The date and time of latest notifications sent about this activity to the participants or the attendees of this activity
     * @type {string}
     * @memberof ActivityResponseObject
     */
    last_notification_time?: string;
    /**
     * The ID of the user who triggered the sending of the latest notifications about this activity to the participants or the attendees of this activity
     * @type {number}
     * @memberof ActivityResponseObject
     */
    last_notification_user_id?: number;
    /**
     * The ID of the language the notifications are sent in
     * @type {number}
     * @memberof ActivityResponseObject
     */
    notification_language_id?: number;
    /**
     * Whether the activity is active or not
     * @type {boolean}
     * @memberof ActivityResponseObject
     */
    active_flag?: boolean;
    /**
     * The last update date and time of the activity. Format: YYYY-MM-DD HH:MM:SS.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    update_time?: string;
    /**
     * The ID of the user who was the last to update this activity
     * @type {number}
     * @memberof ActivityResponseObject
     */
    update_user_id?: number;
    /**
     * For the activity which syncs to Google calendar, this is the Google event ID. NB! This field is related to old Google calendar sync and will be deprecated soon.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    gcal_event_id?: string;
    /**
     * The Google calendar ID that this activity syncs to. NB! This field is related to old Google calendar sync and will be deprecated soon.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    google_calendar_id?: string;
    /**
     * The Google calendar API etag (version) that is used for syncing this activity. NB! This field is related to old Google calendar sync and will be deprecated soon.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    google_calendar_etag?: string;
    /**
     * For activities that sync to an external calendar, this setting indicates if the activity syncs with context (what are the deals, persons, organizations this activity is related to)
     * @type {string}
     * @memberof ActivityResponseObject
     */
    calendar_sync_include_context?: string;
    /**
     * The timezone the activity was created in an external calendar
     * @type {string}
     * @memberof ActivityResponseObject
     */
    source_timezone?: string;
    /**
     * The rule for the recurrence of the activity. Is important for activities synced into Pipedrive from an external calendar. Example: "RRULE:FREQ=WEEKLY;BYDAY=WE"
     * @type {string}
     * @memberof ActivityResponseObject
     */
    rec_rule?: string;
    /**
     * Additional rules for the recurrence of the activity, extend the `rec_rule`. Is important for activities synced into Pipedrive from an external calendar.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    rec_rule_extension?: string;
    /**
     * The ID of parent activity for a recurrent activity if the current activity is an exception to recurrence rules
     * @type {number}
     * @memberof ActivityResponseObject
     */
    rec_master_activity_id?: number;
    /**
     * The list of recurring activity instances. It is in a structure as follows: `[{due_date: "2020-06-24", due_time: "10:00:00"}]`
     * @type {Array<object>}
     * @memberof ActivityResponseObject
     */
    series?: Array<object>;
    /**
     * The ID of the user who created the activity
     * @type {number}
     * @memberof ActivityResponseObject
     */
    created_by_user_id?: number;
    /**
     * Subfield of location field. Indicates apartment/suite number.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_subpremise?: string;
    /**
     * Subfield of location field. Indicates house number.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_street_number?: string;
    /**
     * Subfield of location field. Indicates street name.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_route?: string;
    /**
     * Subfield of location field. Indicates district/sublocality.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_sublocality?: string;
    /**
     * Subfield of location field. Indicates city/town/village/locality.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_locality?: string;
    /**
     * Subfield of location field. Indicates state/county.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_admin_area_level_1?: string;
    /**
     * Subfield of location field. Indicates region.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_admin_area_level_2?: string;
    /**
     * Subfield of location field. Indicates country.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_country?: string;
    /**
     * Subfield of location field. Indicates ZIP/postal code.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_postal_code?: string;
    /**
     * Subfield of location field. Indicates full/combined address.
     * @type {string}
     * @memberof ActivityResponseObject
     */
    location_formatted_address?: string;
    /**
     * Subfield of location field. Indicates latitude.
     * @type {number}
     * @memberof ActivityResponseObject
     */
    location_lat?: number;
    /**
     * Subfield of location field. Indicates longitude.
     * @type {number}
     * @memberof ActivityResponseObject
     */
    location_long?: number;
    /**
     * The name of the organization this activity is associated with
     * @type {string}
     * @memberof ActivityResponseObject
     */
    org_name?: string;
    /**
     * The name of the person this activity is associated with
     * @type {string}
     * @memberof ActivityResponseObject
     */
    person_name?: string;
    /**
     * The name of the deal this activity is associated with
     * @type {string}
     * @memberof ActivityResponseObject
     */
    deal_title?: string;
    /**
     * The name of the user this activity is owned by
     * @type {string}
     * @memberof ActivityResponseObject
     */
    owner_name?: string;
    /**
     * The BCC email address of the person
     * @type {string}
     * @memberof ActivityResponseObject
     */
    person_dropbox_bcc?: string;
    /**
     * The BCC email address of the deal
     * @type {string}
     * @memberof ActivityResponseObject
     */
    deal_dropbox_bcc?: string;
    /**
     * The ID of the user to whom the activity is assigned to. Equal to `user_id`.
     * @type {number}
     * @memberof ActivityResponseObject
     */
    assigned_to_user_id?: number;
    /**
     * The file that is attached to this activity. For example, this can be a reference to an audio note file generated with Pipedrive mobile app.
     * @type {object}
     * @memberof ActivityResponseObject
     */
    file?: object;
}

/**
* @export
* @enum {string}
*/
export enum ActivityResponseObjectBusyFlagEnum {
    True = true,
    False = false
}


/**
 * Check if a given object implements the ActivityResponseObject interface.
 */
export function instanceOfActivityResponseObject(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ActivityResponseObjectFromJSON(json: any): ActivityResponseObject {
    return ActivityResponseObjectFromJSONTyped(json, false);
}

export function ActivityResponseObjectFromJSONTyped(json: any, ignoreDiscriminator: boolean): ActivityResponseObject {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'due_date': !exists(json, 'due_date') ? undefined : (new Date(json['due_date'])),
        'due_time': !exists(json, 'due_time') ? undefined : json['due_time'],
        'duration': !exists(json, 'duration') ? undefined : json['duration'],
        'deal_id': !exists(json, 'deal_id') ? undefined : json['deal_id'],
        'lead_id': !exists(json, 'lead_id') ? undefined : json['lead_id'],
        'person_id': !exists(json, 'person_id') ? undefined : json['person_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
        'note': !exists(json, 'note') ? undefined : json['note'],
        'location': !exists(json, 'location') ? undefined : json['location'],
        'public_description': !exists(json, 'public_description') ? undefined : json['public_description'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'done': !exists(json, 'done') ? undefined : json['done'],
        'subject': !exists(json, 'subject') ? undefined : json['subject'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
        'participants': !exists(json, 'participants') ? undefined : json['participants'],
        'busy_flag': !exists(json, 'busy_flag') ? undefined : json['busy_flag'],
        'attendees': !exists(json, 'attendees') ? undefined : json['attendees'],
        'company_id': !exists(json, 'company_id') ? undefined : json['company_id'],
        'reference_type': !exists(json, 'reference_type') ? undefined : json['reference_type'],
        'reference_id': !exists(json, 'reference_id') ? undefined : json['reference_id'],
        'conference_meeting_client': !exists(json, 'conference_meeting_client') ? undefined : json['conference_meeting_client'],
        'conference_meeting_url': !exists(json, 'conference_meeting_url') ? undefined : json['conference_meeting_url'],
        'conference_meeting_id': !exists(json, 'conference_meeting_id') ? undefined : json['conference_meeting_id'],
        'add_time': !exists(json, 'add_time') ? undefined : json['add_time'],
        'marked_as_done_time': !exists(json, 'marked_as_done_time') ? undefined : json['marked_as_done_time'],
        'last_notification_time': !exists(json, 'last_notification_time') ? undefined : json['last_notification_time'],
        'last_notification_user_id': !exists(json, 'last_notification_user_id') ? undefined : json['last_notification_user_id'],
        'notification_language_id': !exists(json, 'notification_language_id') ? undefined : json['notification_language_id'],
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'update_time': !exists(json, 'update_time') ? undefined : json['update_time'],
        'update_user_id': !exists(json, 'update_user_id') ? undefined : json['update_user_id'],
        'gcal_event_id': !exists(json, 'gcal_event_id') ? undefined : json['gcal_event_id'],
        'google_calendar_id': !exists(json, 'google_calendar_id') ? undefined : json['google_calendar_id'],
        'google_calendar_etag': !exists(json, 'google_calendar_etag') ? undefined : json['google_calendar_etag'],
        'calendar_sync_include_context': !exists(json, 'calendar_sync_include_context') ? undefined : json['calendar_sync_include_context'],
        'source_timezone': !exists(json, 'source_timezone') ? undefined : json['source_timezone'],
        'rec_rule': !exists(json, 'rec_rule') ? undefined : json['rec_rule'],
        'rec_rule_extension': !exists(json, 'rec_rule_extension') ? undefined : json['rec_rule_extension'],
        'rec_master_activity_id': !exists(json, 'rec_master_activity_id') ? undefined : json['rec_master_activity_id'],
        'series': !exists(json, 'series') ? undefined : json['series'],
        'created_by_user_id': !exists(json, 'created_by_user_id') ? undefined : json['created_by_user_id'],
        'location_subpremise': !exists(json, 'location_subpremise') ? undefined : json['location_subpremise'],
        'location_street_number': !exists(json, 'location_street_number') ? undefined : json['location_street_number'],
        'location_route': !exists(json, 'location_route') ? undefined : json['location_route'],
        'location_sublocality': !exists(json, 'location_sublocality') ? undefined : json['location_sublocality'],
        'location_locality': !exists(json, 'location_locality') ? undefined : json['location_locality'],
        'location_admin_area_level_1': !exists(json, 'location_admin_area_level_1') ? undefined : json['location_admin_area_level_1'],
        'location_admin_area_level_2': !exists(json, 'location_admin_area_level_2') ? undefined : json['location_admin_area_level_2'],
        'location_country': !exists(json, 'location_country') ? undefined : json['location_country'],
        'location_postal_code': !exists(json, 'location_postal_code') ? undefined : json['location_postal_code'],
        'location_formatted_address': !exists(json, 'location_formatted_address') ? undefined : json['location_formatted_address'],
        'location_lat': !exists(json, 'location_lat') ? undefined : json['location_lat'],
        'location_long': !exists(json, 'location_long') ? undefined : json['location_long'],
        'org_name': !exists(json, 'org_name') ? undefined : json['org_name'],
        'person_name': !exists(json, 'person_name') ? undefined : json['person_name'],
        'deal_title': !exists(json, 'deal_title') ? undefined : json['deal_title'],
        'owner_name': !exists(json, 'owner_name') ? undefined : json['owner_name'],
        'person_dropbox_bcc': !exists(json, 'person_dropbox_bcc') ? undefined : json['person_dropbox_bcc'],
        'deal_dropbox_bcc': !exists(json, 'deal_dropbox_bcc') ? undefined : json['deal_dropbox_bcc'],
        'assigned_to_user_id': !exists(json, 'assigned_to_user_id') ? undefined : json['assigned_to_user_id'],
        'file': !exists(json, 'file') ? undefined : json['file'],
    };
}

export function ActivityResponseObjectToJSON(value?: ActivityResponseObject | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'due_date': value.due_date === undefined ? undefined : (value.due_date.toISOString().substr(0,10)),
        'due_time': value.due_time,
        'duration': value.duration,
        'deal_id': value.deal_id,
        'lead_id': value.lead_id,
        'person_id': value.person_id,
        'org_id': value.org_id,
        'note': value.note,
        'location': value.location,
        'public_description': value.public_description,
        'id': value.id,
        'done': value.done,
        'subject': value.subject,
        'type': value.type,
        'user_id': value.user_id,
        'participants': value.participants,
        'busy_flag': value.busy_flag,
        'attendees': value.attendees,
        'company_id': value.company_id,
        'reference_type': value.reference_type,
        'reference_id': value.reference_id,
        'conference_meeting_client': value.conference_meeting_client,
        'conference_meeting_url': value.conference_meeting_url,
        'conference_meeting_id': value.conference_meeting_id,
        'add_time': value.add_time,
        'marked_as_done_time': value.marked_as_done_time,
        'last_notification_time': value.last_notification_time,
        'last_notification_user_id': value.last_notification_user_id,
        'notification_language_id': value.notification_language_id,
        'active_flag': value.active_flag,
        'update_time': value.update_time,
        'update_user_id': value.update_user_id,
        'gcal_event_id': value.gcal_event_id,
        'google_calendar_id': value.google_calendar_id,
        'google_calendar_etag': value.google_calendar_etag,
        'calendar_sync_include_context': value.calendar_sync_include_context,
        'source_timezone': value.source_timezone,
        'rec_rule': value.rec_rule,
        'rec_rule_extension': value.rec_rule_extension,
        'rec_master_activity_id': value.rec_master_activity_id,
        'series': value.series,
        'created_by_user_id': value.created_by_user_id,
        'location_subpremise': value.location_subpremise,
        'location_street_number': value.location_street_number,
        'location_route': value.location_route,
        'location_sublocality': value.location_sublocality,
        'location_locality': value.location_locality,
        'location_admin_area_level_1': value.location_admin_area_level_1,
        'location_admin_area_level_2': value.location_admin_area_level_2,
        'location_country': value.location_country,
        'location_postal_code': value.location_postal_code,
        'location_formatted_address': value.location_formatted_address,
        'location_lat': value.location_lat,
        'location_long': value.location_long,
        'org_name': value.org_name,
        'person_name': value.person_name,
        'deal_title': value.deal_title,
        'owner_name': value.owner_name,
        'person_dropbox_bcc': value.person_dropbox_bcc,
        'deal_dropbox_bcc': value.deal_dropbox_bcc,
        'assigned_to_user_id': value.assigned_to_user_id,
        'file': value.file,
    };
}

