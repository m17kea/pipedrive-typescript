/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GetActivitiesResponse200RelatedObjectsOrganization } from './GetActivitiesResponse200RelatedObjectsOrganization';
import {
    GetActivitiesResponse200RelatedObjectsOrganizationFromJSON,
    GetActivitiesResponse200RelatedObjectsOrganizationFromJSONTyped,
    GetActivitiesResponse200RelatedObjectsOrganizationToJSON,
} from './GetActivitiesResponse200RelatedObjectsOrganization';
import type { GetActivitiesResponse200RelatedObjectsUser } from './GetActivitiesResponse200RelatedObjectsUser';
import {
    GetActivitiesResponse200RelatedObjectsUserFromJSON,
    GetActivitiesResponse200RelatedObjectsUserFromJSONTyped,
    GetActivitiesResponse200RelatedObjectsUserToJSON,
} from './GetActivitiesResponse200RelatedObjectsUser';
import type { GetOrganizationsResponse200AllOfRelatedObjectsPicture } from './GetOrganizationsResponse200AllOfRelatedObjectsPicture';
import {
    GetOrganizationsResponse200AllOfRelatedObjectsPictureFromJSON,
    GetOrganizationsResponse200AllOfRelatedObjectsPictureFromJSONTyped,
    GetOrganizationsResponse200AllOfRelatedObjectsPictureToJSON,
} from './GetOrganizationsResponse200AllOfRelatedObjectsPicture';

/**
 * 
 * @export
 * @interface GetOrganizationsResponse200AllOfRelatedObjects
 */
export interface GetOrganizationsResponse200AllOfRelatedObjects {
    /**
     * 
     * @type {GetActivitiesResponse200RelatedObjectsOrganization}
     * @memberof GetOrganizationsResponse200AllOfRelatedObjects
     */
    organization?: GetActivitiesResponse200RelatedObjectsOrganization;
    /**
     * 
     * @type {GetActivitiesResponse200RelatedObjectsUser}
     * @memberof GetOrganizationsResponse200AllOfRelatedObjects
     */
    user?: GetActivitiesResponse200RelatedObjectsUser;
    /**
     * 
     * @type {GetOrganizationsResponse200AllOfRelatedObjectsPicture}
     * @memberof GetOrganizationsResponse200AllOfRelatedObjects
     */
    picture?: GetOrganizationsResponse200AllOfRelatedObjectsPicture;
}

/**
 * Check if a given object implements the GetOrganizationsResponse200AllOfRelatedObjects interface.
 */
export function instanceOfGetOrganizationsResponse200AllOfRelatedObjects(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GetOrganizationsResponse200AllOfRelatedObjectsFromJSON(json: any): GetOrganizationsResponse200AllOfRelatedObjects {
    return GetOrganizationsResponse200AllOfRelatedObjectsFromJSONTyped(json, false);
}

export function GetOrganizationsResponse200AllOfRelatedObjectsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetOrganizationsResponse200AllOfRelatedObjects {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'organization': !exists(json, 'organization') ? undefined : GetActivitiesResponse200RelatedObjectsOrganizationFromJSON(json['organization']),
        'user': !exists(json, 'user') ? undefined : GetActivitiesResponse200RelatedObjectsUserFromJSON(json['user']),
        'picture': !exists(json, 'picture') ? undefined : GetOrganizationsResponse200AllOfRelatedObjectsPictureFromJSON(json['picture']),
    };
}

export function GetOrganizationsResponse200AllOfRelatedObjectsToJSON(value?: GetOrganizationsResponse200AllOfRelatedObjects | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'organization': GetActivitiesResponse200RelatedObjectsOrganizationToJSON(value.organization),
        'user': GetActivitiesResponse200RelatedObjectsUserToJSON(value.user),
        'picture': GetOrganizationsResponse200AllOfRelatedObjectsPictureToJSON(value.picture),
    };
}

