/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PersonNameCountAndEmailInfoWithIdsAllOf
 */
export interface PersonNameCountAndEmailInfoWithIdsAllOf {
    /**
     * The ID of the owner related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIdsAllOf
     */
    owner_id?: number;
    /**
     * The ID of the organization related to the person
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIdsAllOf
     */
    org_id?: number;
    /**
     * The ID of the person with what the main person was merged
     * @type {number}
     * @memberof PersonNameCountAndEmailInfoWithIdsAllOf
     */
    merge_what_id?: number;
}

/**
 * Check if a given object implements the PersonNameCountAndEmailInfoWithIdsAllOf interface.
 */
export function instanceOfPersonNameCountAndEmailInfoWithIdsAllOf(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PersonNameCountAndEmailInfoWithIdsAllOfFromJSON(json: any): PersonNameCountAndEmailInfoWithIdsAllOf {
    return PersonNameCountAndEmailInfoWithIdsAllOfFromJSONTyped(json, false);
}

export function PersonNameCountAndEmailInfoWithIdsAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonNameCountAndEmailInfoWithIdsAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'owner_id': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
        'merge_what_id': !exists(json, 'merge_what_id') ? undefined : json['merge_what_id'],
    };
}

export function PersonNameCountAndEmailInfoWithIdsAllOfToJSON(value?: PersonNameCountAndEmailInfoWithIdsAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'owner_id': value.owner_id,
        'org_id': value.org_id,
        'merge_what_id': value.merge_what_id,
    };
}

