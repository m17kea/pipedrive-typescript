/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AddNoteRequest
 */
export interface AddNoteRequest {
    /**
     * The content of the note in HTML format. Subject to sanitization on the back-end.
     * @type {string}
     * @memberof AddNoteRequest
     */
    content: string;
    /**
     * The ID of the lead the note will be attached to. This property is required unless one of (`deal_id/person_id/org_id`) is specified.
     * @type {string}
     * @memberof AddNoteRequest
     */
    lead_id?: string;
    /**
     * The ID of the deal the note will be attached to. This property is required unless one of (`lead_id/person_id/org_id`) is specified.
     * @type {number}
     * @memberof AddNoteRequest
     */
    deal_id?: number;
    /**
     * The ID of the person this note will be attached to. This property is required unless one of (`deal_id/lead_id/org_id`) is specified.
     * @type {number}
     * @memberof AddNoteRequest
     */
    person_id?: number;
    /**
     * The ID of the organization this note will be attached to. This property is required unless one of (`deal_id/lead_id/person_id`) is specified.
     * @type {number}
     * @memberof AddNoteRequest
     */
    org_id?: number;
    /**
     * The ID of the user who will be marked as the author of the note. Only an admin can change the author.
     * @type {number}
     * @memberof AddNoteRequest
     */
    user_id?: number;
    /**
     * The optional creation date & time of the note in UTC. Can be set in the past or in the future. Requires admin user API token. Format: YYYY-MM-DD HH:MM:SS
     * @type {string}
     * @memberof AddNoteRequest
     */
    add_time?: string;
    /**
     * 
     * @type {number}
     * @memberof AddNoteRequest
     */
    pinned_to_lead_flag?: AddNoteRequestPinnedToLeadFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof AddNoteRequest
     */
    pinned_to_deal_flag?: AddNoteRequestPinnedToDealFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof AddNoteRequest
     */
    pinned_to_organization_flag?: AddNoteRequestPinnedToOrganizationFlagEnum;
    /**
     * 
     * @type {number}
     * @memberof AddNoteRequest
     */
    pinned_to_person_flag?: AddNoteRequestPinnedToPersonFlagEnum;
}

/**
* @export
* @enum {string}
*/
export enum AddNoteRequestPinnedToLeadFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum AddNoteRequestPinnedToDealFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum AddNoteRequestPinnedToOrganizationFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}
/**
* @export
* @enum {string}
*/
export enum AddNoteRequestPinnedToPersonFlagEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1
}


/**
 * Check if a given object implements the AddNoteRequest interface.
 */
export function instanceOfAddNoteRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "content" in value;

    return isInstance;
}

export function AddNoteRequestFromJSON(json: any): AddNoteRequest {
    return AddNoteRequestFromJSONTyped(json, false);
}

export function AddNoteRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddNoteRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'content': json['content'],
        'lead_id': !exists(json, 'lead_id') ? undefined : json['lead_id'],
        'deal_id': !exists(json, 'deal_id') ? undefined : json['deal_id'],
        'person_id': !exists(json, 'person_id') ? undefined : json['person_id'],
        'org_id': !exists(json, 'org_id') ? undefined : json['org_id'],
        'user_id': !exists(json, 'user_id') ? undefined : json['user_id'],
        'add_time': !exists(json, 'add_time') ? undefined : json['add_time'],
        'pinned_to_lead_flag': !exists(json, 'pinned_to_lead_flag') ? undefined : json['pinned_to_lead_flag'],
        'pinned_to_deal_flag': !exists(json, 'pinned_to_deal_flag') ? undefined : json['pinned_to_deal_flag'],
        'pinned_to_organization_flag': !exists(json, 'pinned_to_organization_flag') ? undefined : json['pinned_to_organization_flag'],
        'pinned_to_person_flag': !exists(json, 'pinned_to_person_flag') ? undefined : json['pinned_to_person_flag'],
    };
}

export function AddNoteRequestToJSON(value?: AddNoteRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'content': value.content,
        'lead_id': value.lead_id,
        'deal_id': value.deal_id,
        'person_id': value.person_id,
        'org_id': value.org_id,
        'user_id': value.user_id,
        'add_time': value.add_time,
        'pinned_to_lead_flag': value.pinned_to_lead_flag,
        'pinned_to_deal_flag': value.pinned_to_deal_flag,
        'pinned_to_organization_flag': value.pinned_to_organization_flag,
        'pinned_to_person_flag': value.pinned_to_person_flag,
    };
}

