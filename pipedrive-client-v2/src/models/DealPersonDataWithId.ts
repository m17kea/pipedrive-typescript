/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DealPersonDataWithIdAllOfEmailInner } from './DealPersonDataWithIdAllOfEmailInner';
import {
    DealPersonDataWithIdAllOfEmailInnerFromJSON,
    DealPersonDataWithIdAllOfEmailInnerFromJSONTyped,
    DealPersonDataWithIdAllOfEmailInnerToJSON,
} from './DealPersonDataWithIdAllOfEmailInner';
import type { DealPersonDataWithIdAllOfPhoneInner } from './DealPersonDataWithIdAllOfPhoneInner';
import {
    DealPersonDataWithIdAllOfPhoneInnerFromJSON,
    DealPersonDataWithIdAllOfPhoneInnerFromJSONTyped,
    DealPersonDataWithIdAllOfPhoneInnerToJSON,
} from './DealPersonDataWithIdAllOfPhoneInner';

/**
 * 
 * @export
 * @interface DealPersonDataWithId
 */
export interface DealPersonDataWithId {
    /**
     * Whether the associated person is active or not
     * @type {boolean}
     * @memberof DealPersonDataWithId
     */
    active_flag?: boolean;
    /**
     * The name of the person associated with the deal
     * @type {string}
     * @memberof DealPersonDataWithId
     */
    name?: string;
    /**
     * The emails of the person associated with the deal
     * @type {Array<DealPersonDataWithIdAllOfEmailInner>}
     * @memberof DealPersonDataWithId
     */
    email?: Array<DealPersonDataWithIdAllOfEmailInner>;
    /**
     * The phone numbers of the person associated with the deal
     * @type {Array<DealPersonDataWithIdAllOfPhoneInner>}
     * @memberof DealPersonDataWithId
     */
    phone?: Array<DealPersonDataWithIdAllOfPhoneInner>;
    /**
     * The ID of the owner of the person that is associated with the deal
     * @type {number}
     * @memberof DealPersonDataWithId
     */
    owner_id?: number;
    /**
     * The ID of the person associated with the deal
     * @type {number}
     * @memberof DealPersonDataWithId
     */
    value?: number;
}

/**
 * Check if a given object implements the DealPersonDataWithId interface.
 */
export function instanceOfDealPersonDataWithId(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DealPersonDataWithIdFromJSON(json: any): DealPersonDataWithId {
    return DealPersonDataWithIdFromJSONTyped(json, false);
}

export function DealPersonDataWithIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): DealPersonDataWithId {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'active_flag': !exists(json, 'active_flag') ? undefined : json['active_flag'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'email': !exists(json, 'email') ? undefined : ((json['email'] as Array<any>).map(DealPersonDataWithIdAllOfEmailInnerFromJSON)),
        'phone': !exists(json, 'phone') ? undefined : ((json['phone'] as Array<any>).map(DealPersonDataWithIdAllOfPhoneInnerFromJSON)),
        'owner_id': !exists(json, 'owner_id') ? undefined : json['owner_id'],
        'value': !exists(json, 'value') ? undefined : json['value'],
    };
}

export function DealPersonDataWithIdToJSON(value?: DealPersonDataWithId | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'active_flag': value.active_flag,
        'name': value.name,
        'email': value.email === undefined ? undefined : ((value.email as Array<any>).map(DealPersonDataWithIdAllOfEmailInnerToJSON)),
        'phone': value.phone === undefined ? undefined : ((value.phone as Array<any>).map(DealPersonDataWithIdAllOfPhoneInnerToJSON)),
        'owner_id': value.owner_id,
        'value': value.value,
    };
}

