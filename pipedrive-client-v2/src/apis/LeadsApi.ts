/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AddLeadRequest,
  GetLeadsResponse200,
  LeadIdResponse200,
  LeadResponse404,
  OneLeadResponse200,
  SearchLeadsResponse200,
  UpdateLeadRequest,
} from '../models';
import {
    AddLeadRequestFromJSON,
    AddLeadRequestToJSON,
    GetLeadsResponse200FromJSON,
    GetLeadsResponse200ToJSON,
    LeadIdResponse200FromJSON,
    LeadIdResponse200ToJSON,
    LeadResponse404FromJSON,
    LeadResponse404ToJSON,
    OneLeadResponse200FromJSON,
    OneLeadResponse200ToJSON,
    SearchLeadsResponse200FromJSON,
    SearchLeadsResponse200ToJSON,
    UpdateLeadRequestFromJSON,
    UpdateLeadRequestToJSON,
} from '../models';

export interface AddLeadOperationRequest {
    addLeadRequest?: AddLeadRequest;
}

export interface DeleteLeadRequest {
    id: string;
}

export interface GetLeadRequest {
    id: string;
}

export interface GetLeadsRequest {
    limit?: number;
    start?: number;
    archivedStatus?: GetLeadsArchivedStatusEnum;
    ownerId?: number;
    personId?: number;
    organizationId?: number;
    filterId?: number;
    sort?: GetLeadsSortEnum;
}

export interface SearchLeadsRequest {
    term: string;
    fields?: SearchLeadsFieldsEnum;
    exactMatch?: SearchLeadsExactMatchEnum;
    personId?: number;
    organizationId?: number;
    includeFields?: SearchLeadsIncludeFieldsEnum;
    start?: number;
    limit?: number;
}

export interface UpdateLeadOperationRequest {
    id: string;
    updateLeadRequest?: UpdateLeadRequest;
}

/**
 * LeadsApi - interface
 * 
 * @export
 * @interface LeadsApiInterface
 */
export interface LeadsApiInterface {
    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source `API` assigned. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * @summary Add a lead
     * @param {AddLeadRequest} [addLeadRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LeadsApiInterface
     */
    addLeadRaw(requestParameters: AddLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OneLeadResponse200>>;

    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source `API` assigned. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * Add a lead
     */
    addLead(requestParameters: AddLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OneLeadResponse200>;

    /**
     * Deletes a specific lead.
     * @summary Delete a lead
     * @param {string} id The ID of the lead
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LeadsApiInterface
     */
    deleteLeadRaw(requestParameters: DeleteLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LeadIdResponse200>>;

    /**
     * Deletes a specific lead.
     * Delete a lead
     */
    deleteLead(requestParameters: DeleteLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LeadIdResponse200>;

    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * @summary Get one lead
     * @param {string} id The ID of the lead
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LeadsApiInterface
     */
    getLeadRaw(requestParameters: GetLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OneLeadResponse200>>;

    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * Get one lead
     */
    getLead(requestParameters: GetLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OneLeadResponse200>;

    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. 
     * @summary Get all leads
     * @param {number} [limit] For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
     * @param {number} [start] For pagination, the position that represents the first result for the page
     * @param {'archived' | 'not_archived' | 'all'} [archivedStatus] Filtering based on the archived status of a lead. If not provided, &#x60;All&#x60; is used.
     * @param {number} [ownerId] If supplied, only leads matching the given user will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;owner_id&#x60; when supplied.
     * @param {number} [personId] If supplied, only leads matching the given person will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;person_id&#x60; when supplied.
     * @param {number} [organizationId] If supplied, only leads matching the given organization will be returned. However, &#x60;filter_id&#x60; takes precedence over &#x60;organization_id&#x60; when supplied.
     * @param {number} [filterId] The ID of the filter to use
     * @param {'id' | 'title' | 'owner_id' | 'creator_id' | 'was_seen' | 'expected_close_date' | 'next_activity_id' | 'add_time' | 'update_time'} [sort] The field names and sorting mode separated by a comma (&#x60;field_name_1 ASC&#x60;, &#x60;field_name_2 DESC&#x60;). Only first-level field keys are supported (no nested keys).
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LeadsApiInterface
     */
    getLeadsRaw(requestParameters: GetLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetLeadsResponse200>>;

    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. 
     * Get all leads
     */
    getLeads(requestParameters: GetLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetLeadsResponse200>;

    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * @summary Search leads
     * @param {string} term The search term to look for. Minimum 2 characters (or 1 if using &#x60;exact_match&#x60;).
     * @param {'custom_fields' | 'notes' | 'title'} [fields] A comma-separated string array. The fields to perform the search from. Defaults to all of them.
     * @param {boolean} [exactMatch] When enabled, only full exact matches against the given term are returned. It is &lt;b&gt;not&lt;/b&gt; case sensitive.
     * @param {number} [personId] Will filter leads by the provided person ID. The upper limit of found leads associated with the person is 2000.
     * @param {number} [organizationId] Will filter leads by the provided organization ID. The upper limit of found leads associated with the organization is 2000.
     * @param {'lead.was_seen'} [includeFields] Supports including optional fields in the results which are not provided by default
     * @param {number} [start] Pagination start. Note that the pagination is based on main results and does not include related items when using &#x60;search_for_related_items&#x60; parameter.
     * @param {number} [limit] Items shown per page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LeadsApiInterface
     */
    searchLeadsRaw(requestParameters: SearchLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchLeadsResponse200>>;

    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * Search leads
     */
    searchLeads(requestParameters: SearchLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchLeadsResponse200>;

    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * @summary Update a lead
     * @param {string} id The ID of the lead
     * @param {UpdateLeadRequest} [updateLeadRequest] 
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LeadsApiInterface
     */
    updateLeadRaw(requestParameters: UpdateLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OneLeadResponse200>>;

    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * Update a lead
     */
    updateLead(requestParameters: UpdateLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OneLeadResponse200>;

}

/**
 * 
 */
export class LeadsApi extends runtime.BaseAPI implements LeadsApiInterface {

    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source `API` assigned. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * Add a lead
     */
    async addLeadRaw(requestParameters: AddLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OneLeadResponse200>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["leads:full"]);
        }

        const response = await this.request({
            path: `/leads`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: AddLeadRequestToJSON(requestParameters.addLeadRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OneLeadResponse200FromJSON(jsonValue));
    }

    /**
     * Creates a lead. A lead always has to be linked to a person or an organization or both. All leads created through the Pipedrive API will have a lead source `API` assigned. Here\'s the tutorial for <a href=\"https://pipedrive.readme.io/docs/adding-a-lead\" target=\"_blank\" rel=\"noopener noreferrer\">adding a lead</a>. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields\' values tutorial</a>.
     * Add a lead
     */
    async addLead(requestParameters: AddLeadOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OneLeadResponse200> {
        const response = await this.addLeadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Deletes a specific lead.
     * Delete a lead
     */
    async deleteLeadRaw(requestParameters: DeleteLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LeadIdResponse200>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling deleteLead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["leads:full"]);
        }

        const response = await this.request({
            path: `/leads/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LeadIdResponse200FromJSON(jsonValue));
    }

    /**
     * Deletes a specific lead.
     * Delete a lead
     */
    async deleteLead(requestParameters: DeleteLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LeadIdResponse200> {
        const response = await this.deleteLeadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * Get one lead
     */
    async getLeadRaw(requestParameters: GetLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OneLeadResponse200>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getLead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["leads:read", "leads:full"]);
        }

        const response = await this.request({
            path: `/leads/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OneLeadResponse200FromJSON(jsonValue));
    }

    /**
     * Returns details of a specific lead. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals.
     * Get one lead
     */
    async getLead(requestParameters: GetLeadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OneLeadResponse200> {
        const response = await this.getLeadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. 
     * Get all leads
     */
    async getLeadsRaw(requestParameters: GetLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetLeadsResponse200>> {
        const queryParameters: any = {};

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        if (requestParameters.start !== undefined) {
            queryParameters['start'] = requestParameters.start;
        }

        if (requestParameters.archivedStatus !== undefined) {
            queryParameters['archived_status'] = requestParameters.archivedStatus;
        }

        if (requestParameters.ownerId !== undefined) {
            queryParameters['owner_id'] = requestParameters.ownerId;
        }

        if (requestParameters.personId !== undefined) {
            queryParameters['person_id'] = requestParameters.personId;
        }

        if (requestParameters.organizationId !== undefined) {
            queryParameters['organization_id'] = requestParameters.organizationId;
        }

        if (requestParameters.filterId !== undefined) {
            queryParameters['filter_id'] = requestParameters.filterId;
        }

        if (requestParameters.sort !== undefined) {
            queryParameters['sort'] = requestParameters.sort;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["leads:read", "leads:full"]);
        }

        const response = await this.request({
            path: `/leads`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetLeadsResponse200FromJSON(jsonValue));
    }

    /**
     * Returns multiple leads. Leads are sorted by the time they were created, from oldest to newest. Pagination can be controlled using `limit` and `start` query parameters. If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields\' structure from deals. 
     * Get all leads
     */
    async getLeads(requestParameters: GetLeadsRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetLeadsResponse200> {
        const response = await this.getLeadsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * Search leads
     */
    async searchLeadsRaw(requestParameters: SearchLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SearchLeadsResponse200>> {
        if (requestParameters.term === null || requestParameters.term === undefined) {
            throw new runtime.RequiredError('term','Required parameter requestParameters.term was null or undefined when calling searchLeads.');
        }

        const queryParameters: any = {};

        if (requestParameters.term !== undefined) {
            queryParameters['term'] = requestParameters.term;
        }

        if (requestParameters.fields !== undefined) {
            queryParameters['fields'] = requestParameters.fields;
        }

        if (requestParameters.exactMatch !== undefined) {
            queryParameters['exact_match'] = requestParameters.exactMatch;
        }

        if (requestParameters.personId !== undefined) {
            queryParameters['person_id'] = requestParameters.personId;
        }

        if (requestParameters.organizationId !== undefined) {
            queryParameters['organization_id'] = requestParameters.organizationId;
        }

        if (requestParameters.includeFields !== undefined) {
            queryParameters['include_fields'] = requestParameters.includeFields;
        }

        if (requestParameters.start !== undefined) {
            queryParameters['start'] = requestParameters.start;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["leads:read", "leads:full", "search:read"]);
        }

        const response = await this.request({
            path: `/leads/search`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SearchLeadsResponse200FromJSON(jsonValue));
    }

    /**
     * Searches all leads by title, notes and/or custom fields. This endpoint is a wrapper of <a href=\"https://developers.pipedrive.com/docs/api/v1/ItemSearch#searchItem\">/v1/itemSearch</a> with a narrower OAuth scope. Found leads can be filtered by the person ID and the organization ID.
     * Search leads
     */
    async searchLeads(requestParameters: SearchLeadsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SearchLeadsResponse200> {
        const response = await this.searchLeadsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * Update a lead
     */
    async updateLeadRaw(requestParameters: UpdateLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<OneLeadResponse200>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling updateLead.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["leads:full"]);
        }

        const response = await this.request({
            path: `/leads/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: UpdateLeadRequestToJSON(requestParameters.updateLeadRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => OneLeadResponse200FromJSON(jsonValue));
    }

    /**
     * Updates one or more properties of a lead. Only properties included in the request will be updated. Send `null` to unset a property (applicable for example for `value`, `person_id` or `organization_id`). If a lead contains custom fields, the fields\' values will be included in the response in the same format as with the `Deals` endpoints. If a custom field\'s value hasn\'t been set for the lead, it won\'t appear in the response. Please note that leads do not have a separate set of custom fields, instead they inherit the custom fields’ structure from deals. See an example given in the <a href=\"https://pipedrive.readme.io/docs/updating-custom-field-value\" target=\"_blank\" rel=\"noopener noreferrer\">updating custom fields’ values tutorial</a>.
     * Update a lead
     */
    async updateLead(requestParameters: UpdateLeadOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<OneLeadResponse200> {
        const response = await this.updateLeadRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
  * @export
  * @enum {string}
  */
export enum GetLeadsArchivedStatusEnum {
    Archived = 'archived',
    NotArchived = 'not_archived',
    All = 'all'
}
/**
  * @export
  * @enum {string}
  */
export enum GetLeadsSortEnum {
    Id = 'id',
    Title = 'title',
    OwnerId = 'owner_id',
    CreatorId = 'creator_id',
    WasSeen = 'was_seen',
    ExpectedCloseDate = 'expected_close_date',
    NextActivityId = 'next_activity_id',
    AddTime = 'add_time',
    UpdateTime = 'update_time'
}
/**
  * @export
  * @enum {string}
  */
export enum SearchLeadsFieldsEnum {
    CustomFields = 'custom_fields',
    Notes = 'notes',
    Title = 'title'
}
/**
  * @export
  * @enum {string}
  */
export enum SearchLeadsExactMatchEnum {
    True = true,
    False = false
}
/**
  * @export
  * @enum {string}
  */
export enum SearchLeadsIncludeFieldsEnum {
    LeadWasSeen = 'lead.was_seen'
}
