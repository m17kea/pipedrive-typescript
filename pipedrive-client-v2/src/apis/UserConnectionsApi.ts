/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  UnathorizedResponse,
  UserConnectionsResponse200,
} from '../models';
import {
    UnathorizedResponseFromJSON,
    UnathorizedResponseToJSON,
    UserConnectionsResponse200FromJSON,
    UserConnectionsResponse200ToJSON,
} from '../models';

/**
 * UserConnectionsApi - interface
 * 
 * @export
 * @interface UserConnectionsApiInterface
 */
export interface UserConnectionsApiInterface {
    /**
     * Returns data about all connections for the authorized user.
     * @summary Get all user connections
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UserConnectionsApiInterface
     */
    getUserConnectionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserConnectionsResponse200>>;

    /**
     * Returns data about all connections for the authorized user.
     * Get all user connections
     */
    getUserConnections(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserConnectionsResponse200>;

}

/**
 * 
 */
export class UserConnectionsApi extends runtime.BaseAPI implements UserConnectionsApiInterface {

    /**
     * Returns data about all connections for the authorized user.
     * Get all user connections
     */
    async getUserConnectionsRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserConnectionsResponse200>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["base"]);
        }

        const response = await this.request({
            path: `/userConnections`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserConnectionsResponse200FromJSON(jsonValue));
    }

    /**
     * Returns data about all connections for the authorized user.
     * Get all user connections
     */
    async getUserConnections(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserConnectionsResponse200> {
        const response = await this.getUserConnectionsRaw(initOverrides);
        return await response.value();
    }

}
