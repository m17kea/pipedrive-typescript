/* tslint:disable */
/* eslint-disable */
/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetRecentsResponse200,
} from '../models';
import {
    GetRecentsResponse200FromJSON,
    GetRecentsResponse200ToJSON,
} from '../models';

export interface GetRecentsRequest {
    sinceTimestamp: string;
    items?: GetRecentsItemsEnum;
    start?: number;
    limit?: number;
}

/**
 * RecentsApi - interface
 * 
 * @export
 * @interface RecentsApiInterface
 */
export interface RecentsApiInterface {
    /**
     * Returns data about all recent changes occurred after the given timestamp.
     * @summary Get recents
     * @param {string} sinceTimestamp The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS
     * @param {'activity' | 'activityType' | 'deal' | 'file' | 'filter' | 'note' | 'person' | 'organization' | 'pipeline' | 'product' | 'stage' | 'user'} [items] Multiple selection of item types to include in the query (optional)
     * @param {number} [start] Pagination start
     * @param {number} [limit] Items shown per page
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecentsApiInterface
     */
    getRecentsRaw(requestParameters: GetRecentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRecentsResponse200>>;

    /**
     * Returns data about all recent changes occurred after the given timestamp.
     * Get recents
     */
    getRecents(requestParameters: GetRecentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRecentsResponse200>;

}

/**
 * 
 */
export class RecentsApi extends runtime.BaseAPI implements RecentsApiInterface {

    /**
     * Returns data about all recent changes occurred after the given timestamp.
     * Get recents
     */
    async getRecentsRaw(requestParameters: GetRecentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetRecentsResponse200>> {
        if (requestParameters.sinceTimestamp === null || requestParameters.sinceTimestamp === undefined) {
            throw new runtime.RequiredError('sinceTimestamp','Required parameter requestParameters.sinceTimestamp was null or undefined when calling getRecents.');
        }

        const queryParameters: any = {};

        if (requestParameters.sinceTimestamp !== undefined) {
            queryParameters['since_timestamp'] = requestParameters.sinceTimestamp;
        }

        if (requestParameters.items !== undefined) {
            queryParameters['items'] = requestParameters.items;
        }

        if (requestParameters.start !== undefined) {
            queryParameters['start'] = requestParameters.start;
        }

        if (requestParameters.limit !== undefined) {
            queryParameters['limit'] = requestParameters.limit;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            queryParameters["api_token"] = this.configuration.apiKey("api_token"); // api_key authentication
        }

        if (this.configuration && this.configuration.accessToken) {
            // oauth required
            headerParameters["Authorization"] = await this.configuration.accessToken("oauth2", ["recents:read", "search:read"]);
        }

        const response = await this.request({
            path: `/recents`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GetRecentsResponse200FromJSON(jsonValue));
    }

    /**
     * Returns data about all recent changes occurred after the given timestamp.
     * Get recents
     */
    async getRecents(requestParameters: GetRecentsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetRecentsResponse200> {
        const response = await this.getRecentsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
  * @export
  * @enum {string}
  */
export enum GetRecentsItemsEnum {
    Activity = 'activity',
    ActivityType = 'activityType',
    Deal = 'deal',
    File = 'file',
    Filter = 'filter',
    Note = 'note',
    Person = 'person',
    Organization = 'organization',
    Pipeline = 'pipeline',
    Product = 'product',
    Stage = 'stage',
    User = 'user'
}
