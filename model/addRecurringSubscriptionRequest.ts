/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class AddRecurringSubscriptionRequest {
    /**
    * The ID of the deal this recurring subscription is associated with
    */
    'dealId': number;
    /**
    * The currency of the recurring subscription. Accepts a 3-character currency code.
    */
    'currency': string;
    /**
    * The description of the recurring subscription
    */
    'description'?: string;
    /**
    * The interval between payments
    */
    'cadenceType': AddRecurringSubscriptionRequest.CadenceTypeEnum;
    /**
    * Shows how many payments the subscription has. Note that one field must be set: `cycles_count` or `infinite`. If `cycles_count` is set, then `cycle_amount` and `start_date` are also required.
    */
    'cyclesCount'?: number;
    /**
    * The amount of each payment
    */
    'cycleAmount': number;
    /**
    * The start date of the recurring subscription. Format: YYYY-MM-DD
    */
    'startDate': string;
    /**
    * This indicates that the recurring subscription will last until it\'s manually canceled or deleted. Note that only one field must be set: `cycles_count` or `infinite`.
    */
    'infinite'?: boolean;
    /**
    * Array of additional payments. It requires a minimum structure as follows: [{ amount:SUM, description:DESCRIPTION, due_at:PAYMENT_DATE }]. Replace SUM with a payment amount, DESCRIPTION with an explanation string, PAYMENT_DATE with a date (format YYYY-MM-DD).
    */
    'payments'?: Array<object>;
    /**
    * Indicates that the deal value must be set to recurring subscription\'s MRR value
    */
    'updateDealValue'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "dealId",
            "baseName": "deal_id",
            "type": "number"
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "cadenceType",
            "baseName": "cadence_type",
            "type": "AddRecurringSubscriptionRequest.CadenceTypeEnum"
        },
        {
            "name": "cyclesCount",
            "baseName": "cycles_count",
            "type": "number"
        },
        {
            "name": "cycleAmount",
            "baseName": "cycle_amount",
            "type": "number"
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "string"
        },
        {
            "name": "infinite",
            "baseName": "infinite",
            "type": "boolean"
        },
        {
            "name": "payments",
            "baseName": "payments",
            "type": "Array<object>"
        },
        {
            "name": "updateDealValue",
            "baseName": "update_deal_value",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return AddRecurringSubscriptionRequest.attributeTypeMap;
    }
}

export namespace AddRecurringSubscriptionRequest {
    export enum CadenceTypeEnum {
        Weekly = <any> 'weekly',
        Monthly = <any> 'monthly',
        Quarterly = <any> 'quarterly',
        Yearly = <any> 'yearly'
    }
}
