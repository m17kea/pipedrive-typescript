/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class GetRecentsResponse200DataInnerAnyOf9Data {
    /**
    * The ID of the product
    */
    'id'?: number;
    /**
    * The name of the product
    */
    'name'?: string;
    /**
    * The product code
    */
    'code'?: string;
    /**
    * The description of the product
    */
    'description'?: string;
    /**
    * The unit in which this product is sold
    */
    'unit'?: string;
    /**
    * The tax percentage
    */
    'tax'?: number = 0;
    /**
    * The category of the product
    */
    'category'?: string;
    /**
    * Whether this product will be made active or not
    */
    'activeFlag'?: boolean;
    /**
    * Whether this product can be selected in deals or not
    */
    'selectable'?: boolean;
    /**
    * The first letter of the product name
    */
    'firstChar'?: string;
    /**
    * The visibility of the product. If omitted, the visibility will be set to the default visibility setting of this item type for the authorized user.
    */
    'visibleTo'?: number;
    /**
    * The ID of the user who will be marked as the owner of this product. When omitted, authorized user ID will be used.
    */
    'ownerId'?: number;
    /**
    * The count of files
    */
    'filesCount'?: number;
    /**
    * The count of followers
    */
    'followersCount'?: number;
    /**
    * The date and time when the product was added to the deal
    */
    'addTime'?: string;
    /**
    * The date and time when the product was updated to the deal
    */
    'updateTime'?: string;
    /**
    * Array of objects, each containing: `currency` (string), `price` (number), `cost` (number, optional), `overhead_cost` (number, optional). Note that there can only be one price per product per currency. When `prices` is omitted altogether, a default price of 0 and a default currency based on the company\'s currency will be assigned.
    */
    'prices'?: Array<object>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        },
        {
            "name": "unit",
            "baseName": "unit",
            "type": "string"
        },
        {
            "name": "tax",
            "baseName": "tax",
            "type": "number"
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "string"
        },
        {
            "name": "activeFlag",
            "baseName": "active_flag",
            "type": "boolean"
        },
        {
            "name": "selectable",
            "baseName": "selectable",
            "type": "boolean"
        },
        {
            "name": "firstChar",
            "baseName": "first_char",
            "type": "string"
        },
        {
            "name": "visibleTo",
            "baseName": "visible_to",
            "type": "number"
        },
        {
            "name": "ownerId",
            "baseName": "owner_id",
            "type": "number"
        },
        {
            "name": "filesCount",
            "baseName": "files_count",
            "type": "number"
        },
        {
            "name": "followersCount",
            "baseName": "followers_count",
            "type": "number"
        },
        {
            "name": "addTime",
            "baseName": "add_time",
            "type": "string"
        },
        {
            "name": "updateTime",
            "baseName": "update_time",
            "type": "string"
        },
        {
            "name": "prices",
            "baseName": "prices",
            "type": "Array<object>"
        }    ];

    static getAttributeTypeMap() {
        return GetRecentsResponse200DataInnerAnyOf9Data.attributeTypeMap;
    }
}

