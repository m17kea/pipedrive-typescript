/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class AddFilterRequest {
    /**
    * The name of the filter
    */
    'name': string;
    /**
    * The conditions of the filter as a JSON object. It requires a minimum structure as follows: `{\"glue\":\"and\",\"conditions\":[{\"glue\":\"and\",\"conditions\": [CONDITION_OBJECTS]},{\"glue\":\"or\",\"conditions\":[CONDITION_OBJECTS]}]}`. Replace `CONDITION_OBJECTS` with JSON objects of the following structure: `{\"object\":\"\",\"field_id\":\"\", \"operator\":\"\",\"value\":\"\", \"extra_value\":\"\"}` or leave the array empty. Depending on the object type you should use another API endpoint to get `field_id`. There are five types of objects you can choose from: `\"person\"`, `\"deal\"`, `\"organization\"`, `\"product\"`, `\"activity\"` and you can use these types of operators depending on what type of a field you have: `\"IS NOT NULL\"`, `\"IS NULL\"`, `\"<=\"`, `\">=\"`, `\"<\"`, `\">\"`, `\"!=\"`, `\"=\"`, `\"LIKE \'$%\'\"`, `\"LIKE \'%$%\'\"`, `\"NOT LIKE \'$%\'\"`. To get a better understanding of how filters work try creating them directly from the Pipedrive application.
    */
    'conditions': object;
    'type': AddFilterRequest.TypeEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "conditions",
            "baseName": "conditions",
            "type": "object"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "AddFilterRequest.TypeEnum"
        }    ];

    static getAttributeTypeMap() {
        return AddFilterRequest.attributeTypeMap;
    }
}

export namespace AddFilterRequest {
    export enum TypeEnum {
        Deals = <any> 'deals',
        Leads = <any> 'leads',
        Org = <any> 'org',
        People = <any> 'people',
        Products = <any> 'products',
        Activity = <any> 'activity'
    }
}
