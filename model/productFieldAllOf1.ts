/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class ProductFieldAllOf1 {
    /**
    * The ID of the product field
    */
    'id'?: number;
    /**
    * The key of the product field
    */
    'key'?: string;
    /**
    * The position (index) of the product field in the detail view
    */
    'orderNr'?: number;
    /**
    * The product field creation time. Format: YYYY-MM-DD HH:MM:SS
    */
    'addTime'?: string;
    /**
    * The product field last update time. Format: YYYY-MM-DD HH:MM:SS
    */
    'updateTime'?: string;
    /**
    * The ID of the last user to update the product field
    */
    'lastUpdatedByUserId'?: number;
    /**
    * Whether or not the product field is currently active
    */
    'activeFlag'?: boolean;
    /**
    * Whether or not the product field name and metadata is editable
    */
    'editFlag'?: boolean;
    /**
    * Whether or not the product field is visible in the Add Product Modal
    */
    'addVisibleFlag'?: boolean;
    /**
    * Whether or not the product field is marked as important
    */
    'importantFlag'?: boolean;
    /**
    * Whether or not the product field data can be edited
    */
    'bulkEditAllowed'?: boolean;
    /**
    * Whether or not the product field is searchable
    */
    'searchableFlag'?: boolean;
    /**
    * Whether or not the product field value can be used when filtering searches
    */
    'filteringAllowed'?: boolean;
    /**
    * Whether or not the product field is sortable
    */
    'sortableFlag'?: boolean;
    /**
    * Whether or not the product field is mandatory when creating products
    */
    'mandatoryFlag'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string"
        },
        {
            "name": "orderNr",
            "baseName": "order_nr",
            "type": "number"
        },
        {
            "name": "addTime",
            "baseName": "add_time",
            "type": "string"
        },
        {
            "name": "updateTime",
            "baseName": "update_time",
            "type": "string"
        },
        {
            "name": "lastUpdatedByUserId",
            "baseName": "last_updated_by_user_id",
            "type": "number"
        },
        {
            "name": "activeFlag",
            "baseName": "active_flag",
            "type": "boolean"
        },
        {
            "name": "editFlag",
            "baseName": "edit_flag",
            "type": "boolean"
        },
        {
            "name": "addVisibleFlag",
            "baseName": "add_visible_flag",
            "type": "boolean"
        },
        {
            "name": "importantFlag",
            "baseName": "important_flag",
            "type": "boolean"
        },
        {
            "name": "bulkEditAllowed",
            "baseName": "bulk_edit_allowed",
            "type": "boolean"
        },
        {
            "name": "searchableFlag",
            "baseName": "searchable_flag",
            "type": "boolean"
        },
        {
            "name": "filteringAllowed",
            "baseName": "filtering_allowed",
            "type": "boolean"
        },
        {
            "name": "sortableFlag",
            "baseName": "sortable_flag",
            "type": "boolean"
        },
        {
            "name": "mandatoryFlag",
            "baseName": "mandatory_flag",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return ProductFieldAllOf1.attributeTypeMap;
    }
}

