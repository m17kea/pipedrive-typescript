/**
 * Pipedrive API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The file data
*/
export class GetFilesResponse200DataInner {
    /**
    * The ID of the file
    */
    'id'?: number;
    /**
    * The ID of the user to associate the file with
    */
    'userId'?: number;
    /**
    * The ID of the deal to associate the file with
    */
    'dealId'?: number;
    /**
    * The ID of the person to associate the file with
    */
    'personId'?: number;
    /**
    * The ID of the organization to associate the file with
    */
    'orgId'?: number;
    /**
    * The ID of the product to associate the file with
    */
    'productId'?: number;
    /**
    * The ID of the activity to associate the file with
    */
    'activityId'?: number;
    /**
    * The date and time when the file was added/created. Format: YYYY-MM-DD HH:MM:SS
    */
    'addTime'?: string;
    /**
    * The last updated date and time of the file. Format: YYYY-MM-DD HH:MM:SS
    */
    'updateTime'?: string;
    /**
    * The original name of the file
    */
    'fileName'?: string;
    /**
    * The size of the file
    */
    'fileSize'?: number;
    /**
    * Whether the user is active or not. false = Not activated, true = Activated
    */
    'activeFlag'?: boolean;
    /**
    * Whether the file was uploaded as inline or not
    */
    'inlineFlag'?: boolean;
    /**
    * The location type to send the file to. Only googledrive is supported at the moment.
    */
    'remoteLocation'?: string;
    /**
    * The ID of the remote item
    */
    'remoteId'?: string;
    /**
    * The ID of the inline attachment
    */
    'cid'?: string;
    /**
    * The location of the cloud storage
    */
    's3Bucket'?: string;
    /**
    * The ID of the mail message to associate the file with
    */
    'mailMessageId'?: string;
    /**
    * The ID of the mail template to associate the file with
    */
    'mailTemplateId'?: string;
    /**
    * The name of the deal associated with the file
    */
    'dealName'?: string;
    /**
    * The name of the person associated with the file
    */
    'personName'?: string;
    /**
    * The name of the organization associated with the file
    */
    'orgName'?: string;
    /**
    * The name of the product associated with the file
    */
    'productName'?: string;
    /**
    * The URL of the download file
    */
    'url'?: string;
    /**
    * The visible name of the file
    */
    'name'?: string;
    /**
    * The description of the file
    */
    'description'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "number"
        },
        {
            "name": "userId",
            "baseName": "user_id",
            "type": "number"
        },
        {
            "name": "dealId",
            "baseName": "deal_id",
            "type": "number"
        },
        {
            "name": "personId",
            "baseName": "person_id",
            "type": "number"
        },
        {
            "name": "orgId",
            "baseName": "org_id",
            "type": "number"
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "number"
        },
        {
            "name": "activityId",
            "baseName": "activity_id",
            "type": "number"
        },
        {
            "name": "addTime",
            "baseName": "add_time",
            "type": "string"
        },
        {
            "name": "updateTime",
            "baseName": "update_time",
            "type": "string"
        },
        {
            "name": "fileName",
            "baseName": "file_name",
            "type": "string"
        },
        {
            "name": "fileSize",
            "baseName": "file_size",
            "type": "number"
        },
        {
            "name": "activeFlag",
            "baseName": "active_flag",
            "type": "boolean"
        },
        {
            "name": "inlineFlag",
            "baseName": "inline_flag",
            "type": "boolean"
        },
        {
            "name": "remoteLocation",
            "baseName": "remote_location",
            "type": "string"
        },
        {
            "name": "remoteId",
            "baseName": "remote_id",
            "type": "string"
        },
        {
            "name": "cid",
            "baseName": "cid",
            "type": "string"
        },
        {
            "name": "s3Bucket",
            "baseName": "s3_bucket",
            "type": "string"
        },
        {
            "name": "mailMessageId",
            "baseName": "mail_message_id",
            "type": "string"
        },
        {
            "name": "mailTemplateId",
            "baseName": "mail_template_id",
            "type": "string"
        },
        {
            "name": "dealName",
            "baseName": "deal_name",
            "type": "string"
        },
        {
            "name": "personName",
            "baseName": "person_name",
            "type": "string"
        },
        {
            "name": "orgName",
            "baseName": "org_name",
            "type": "string"
        },
        {
            "name": "productName",
            "baseName": "product_name",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GetFilesResponse200DataInner.attributeTypeMap;
    }
}

